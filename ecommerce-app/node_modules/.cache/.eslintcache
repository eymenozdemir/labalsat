[{"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/index.js":"1","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/App.js":"2","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/app/store.js":"3","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/ScrollToTop.js":"4","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/LanguageSelector.js":"5","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Layout.js":"6","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/About.js":"7","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Login.js":"8","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Contact.js":"9","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Home.js":"10","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Store.js":"11","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/CompareProduct.js":"12","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Wishlist.js":"13","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Signup.js":"14","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ForgotPassword.js":"15","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/PrivacyPolicy.js":"16","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/FAQ.js":"17","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/RefundPolicy.js":"18","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ResetPassword.js":"19","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ShippingPolicy.js":"20","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/TermAndConditions.js":"21","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ProductList.js":"22","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Product.js":"23","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Checkout.js":"24","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Cart.js":"25","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Orders.js":"26","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ServiceEngineer.js":"27","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ServiceContract.js":"28","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Offer.js":"29","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Profile.js":"30","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/routing/PrivateRoutes.js":"31","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/counter/counterSlice.js":"32","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/routing/OpenRoutes.js":"33","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/products/productSlice.js":"34","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/user/userSlice.js":"35","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/contact/contactSlice.js":"36","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/brand/brandSlice.js":"37","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/upload/uploadSlice.js":"38","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/pcategory/pcategorySlice.js":"39","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Footer.js":"40","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Header.js":"41","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/CustomInput.js":"42","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/ProductCard.js":"43","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Container.js":"44","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Meta.js":"45","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/BreadCrumb.js":"46","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/StoreCard.js":"47","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/MobileCard.js":"48","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/i18n/index.js":"49","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/utils/Data.js":"50","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/counter/counterAPI.js":"51","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/products/productService.js":"52","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/CustomInput.js":"53","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/MobileProdCard.js":"54","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/contact/contactService.js":"55","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/brand/brandService.js":"56","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/upload/uploadService.js":"57","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/pcategory/pcategoryService.js":"58","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/user/userService.js":"59","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/contract/contractSlice.js":"60","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/utils/axiosConfig.js":"61","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/contract/contractService.js":"62"},{"size":386,"mtime":1695289950000,"results":"63","hashOfConfig":"64"},{"size":3485,"mtime":1699950412000,"results":"65","hashOfConfig":"64"},{"size":837,"mtime":1687880838000,"results":"66","hashOfConfig":"64"},{"size":256,"mtime":1695289846000,"results":"67","hashOfConfig":"64"},{"size":830,"mtime":1699948604000,"results":"68","hashOfConfig":"64"},{"size":624,"mtime":1687436028000,"results":"69","hashOfConfig":"64"},{"size":116,"mtime":1679929788000,"results":"70","hashOfConfig":"64"},{"size":3546,"mtime":1700024684000,"results":"71","hashOfConfig":"64"},{"size":11856,"mtime":1700019586000,"results":"72","hashOfConfig":"64"},{"size":32065,"mtime":1733796078588,"results":"73","hashOfConfig":"64"},{"size":7692,"mtime":1690105140000,"results":"74","hashOfConfig":"64"},{"size":4326,"mtime":1680724462000,"results":"75","hashOfConfig":"64"},{"size":6806,"mtime":1700238034000,"results":"76","hashOfConfig":"64"},{"size":5181,"mtime":1700236982000,"results":"77","hashOfConfig":"64"},{"size":2631,"mtime":1699023398000,"results":"78","hashOfConfig":"64"},{"size":719,"mtime":1700231028000,"results":"79","hashOfConfig":"64"},{"size":1227,"mtime":1700020066000,"results":"80","hashOfConfig":"64"},{"size":834,"mtime":1700235924000,"results":"81","hashOfConfig":"64"},{"size":2568,"mtime":1689840804000,"results":"82","hashOfConfig":"64"},{"size":876,"mtime":1700236648000,"results":"83","hashOfConfig":"64"},{"size":1762,"mtime":1700237786000,"results":"84","hashOfConfig":"64"},{"size":7633,"mtime":1700233454000,"results":"85","hashOfConfig":"64"},{"size":22843,"mtime":1700232158000,"results":"86","hashOfConfig":"64"},{"size":25675,"mtime":1700238416000,"results":"87","hashOfConfig":"64"},{"size":4993,"mtime":1695389072000,"results":"88","hashOfConfig":"64"},{"size":4642,"mtime":1694764622000,"results":"89","hashOfConfig":"64"},{"size":867,"mtime":1700236544000,"results":"90","hashOfConfig":"64"},{"size":6358,"mtime":1700236394000,"results":"91","hashOfConfig":"64"},{"size":12549,"mtime":1700230750000,"results":"92","hashOfConfig":"64"},{"size":24154,"mtime":1700235754000,"results":"93","hashOfConfig":"64"},{"size":274,"mtime":1689939464000,"results":"94","hashOfConfig":"64"},{"size":2746,"mtime":499133700000,"results":"95","hashOfConfig":"64"},{"size":329,"mtime":1689939470000,"results":"96","hashOfConfig":"64"},{"size":6211,"mtime":1695531362000,"results":"97","hashOfConfig":"64"},{"size":14678,"mtime":1733798531243,"results":"98","hashOfConfig":"64"},{"size":1604,"mtime":1695380890000,"results":"99","hashOfConfig":"64"},{"size":4585,"mtime":1695531324000,"results":"100","hashOfConfig":"64"},{"size":2485,"mtime":1695531242000,"results":"101","hashOfConfig":"64"},{"size":4924,"mtime":1695531290000,"results":"102","hashOfConfig":"64"},{"size":12361,"mtime":1699973418000,"results":"103","hashOfConfig":"64"},{"size":13746,"mtime":1700025566000,"results":"104","hashOfConfig":"64"},{"size":540,"mtime":1689776426000,"results":"105","hashOfConfig":"64"},{"size":1553,"mtime":1699368728000,"results":"106","hashOfConfig":"64"},{"size":488,"mtime":1694265032000,"results":"107","hashOfConfig":"64"},{"size":259,"mtime":1680327506000,"results":"108","hashOfConfig":"64"},{"size":730,"mtime":1699970430000,"results":"109","hashOfConfig":"64"},{"size":3513,"mtime":1699973074000,"results":"110","hashOfConfig":"64"},{"size":3387,"mtime":1699972852000,"results":"111","hashOfConfig":"64"},{"size":968,"mtime":1699948618000,"results":"112","hashOfConfig":"64"},{"size":1109,"mtime":1700023810000,"results":"113","hashOfConfig":"64"},{"size":196,"mtime":499133700000,"results":"114","hashOfConfig":"64"},{"size":2015,"mtime":1695304210000,"results":"115","hashOfConfig":"64"},{"size":503,"mtime":1676186006000,"results":"116","hashOfConfig":"64"},{"size":1546,"mtime":1699368882000,"results":"117","hashOfConfig":"64"},{"size":333,"mtime":1695389072000,"results":"118","hashOfConfig":"64"},{"size":956,"mtime":1694268214000,"results":"119","hashOfConfig":"64"},{"size":586,"mtime":1694268254000,"results":"120","hashOfConfig":"64"},{"size":1059,"mtime":1694268218000,"results":"121","hashOfConfig":"64"},{"size":3603,"mtime":1733798531251,"results":"122","hashOfConfig":"64"},{"size":1619,"mtime":1695381040000,"results":"123","hashOfConfig":"64"},{"size":694,"mtime":1733798367661,"results":"124","hashOfConfig":"64"},{"size":337,"mtime":1695531506000,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},"r400ul",{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338"},"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/index.js",["339"],[],"import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './app/store';\nimport ScrollToTop from './components/ScrollToTop';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n      <Provider store={store} > <App /> </Provider>\n);\n\n","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/App.js",["340"],[],"import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport Layout from './components/Layout';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Store from './pages/Store';\nimport CompareProduct from './pages/CompareProduct';\nimport Wishlist from './pages/Wishlist';\nimport Login from './pages/Login';\nimport ForgotPassword from './pages/ForgotPassword';\nimport Signup from './pages/Signup';\nimport ResetPassword from './pages/ResetPassword';\nimport PrivacyPolicy from './pages/PrivacyPolicy';\nimport RefundPolicy from './pages/RefundPolicy';\nimport ShippingPolicy from './pages/ShippingPolicy';\nimport TermAndConditions from './pages/TermAndConditions';\nimport FAQ from './pages/FAQ';\nimport ProductList from './pages/ProductList';\nimport Product from './pages/Product';\nimport Cart from './pages/Cart';\nimport Checkout from './pages/Checkout';\nimport Offer from './pages/Offer';\nimport { PrivateRoutes } from './routing/PrivateRoutes';\nimport { OpenRoutes } from './routing/OpenRoutes';\nimport Orders from './pages/Orders';\nimport Profile from './pages/Profile';\nimport ServiceEngineer from './pages/ServiceEngineer';\nimport ServiceContract from './pages/ServiceContract';\nimport ScrollToTop from './components/ScrollToTop';\nimport LanguageSelector from './components/LanguageSelector';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <ScrollToTop />\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <Route index element={<Home/>}/>\n            <Route path=\"about\" element={<About />}/>\n            <Route path=\"contact\" element={<Contact />}/>\n            <Route path=\"product\" element={<Store />}/>\n            <Route path=\"product/:id\" element={<Product />} />\n            <Route path=\"cart\" element={<PrivateRoutes><Cart /></PrivateRoutes>} />\n            <Route path=\"my-orders\" element={<PrivateRoutes><Orders/></PrivateRoutes>} />\n            <Route path=\"my-profile\" element={<PrivateRoutes><Profile/></PrivateRoutes>} />\n            <Route path=\"checkout\" element={<PrivateRoutes><Checkout /></PrivateRoutes>} />\n            <Route path=\"compare-product\" element={<CompareProduct />}/>\n            <Route path=\"wishlist\" element={<PrivateRoutes><Wishlist /></PrivateRoutes>}/>\n            <Route path=\"login\" element={<OpenRoutes><Login /></OpenRoutes>}/>\n            <Route path=\"forgot-password\" element={<ForgotPassword />}/>\n            <Route path=\"signup\" element={<OpenRoutes><Signup /></OpenRoutes>}/>\n            <Route path=\"reset-password/:token\" element={<ResetPassword />}/>\n            <Route path=\"privacy-policy\" element={<PrivacyPolicy />}/>\n            <Route path=\"labalsat-guarantee\" element={<PrivacyPolicy />}/>\n            <Route path=\"refund-policy\" element={<RefundPolicy />}/>\n            <Route path=\"shipping-policy\" element={<ShippingPolicy />}/>\n            <Route path=\"terms-conditions\" element={<TermAndConditions />}/>\n            <Route path=\"faq\" element={<FAQ />}/>\n            <Route path=\"product-list\" element={<ProductList />}/>\n            <Route path=\"service-engineer\" element={<ServiceEngineer />}/>\n            <Route path=\"service-contract\" element={<ServiceContract />}/>\n            <Route path=\"offer\" element={<PrivateRoutes><Offer /></PrivateRoutes>}/>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n// abc\nexport default App;\n","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/app/store.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/ScrollToTop.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/LanguageSelector.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Layout.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/About.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Login.js",["341","342"],[],"import { React, useEffect, useState } from 'react';\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Container from '../components/Container';\r\nimport CustomInput from '../components/CustomInput';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../features/user/userSlice';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst loginSchema = yup.object({\r\n    email: yup.string().email(\"Email should be valid\").required(\"Email is required\"),\r\n    password: yup.string().required(\"Password is required\"),\r\n  });\r\n\r\nconst Login = () => {\r\n    const { t } = useTranslation();\r\n    const authState = useSelector(state => state.user);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n\r\n        },\r\n        validationSchema: loginSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(loginUser(values));\r\n            localStorage.setItem(\"fromLogin\", true);\r\n            setTimeout(() => {\r\n                navigate('/');\r\n            }, 300);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (authState.user!==null && authState.isError === false){\r\n            navigate('/');\r\n        }\r\n    }, [authState]);\r\n    \r\n    return (\r\n        <>\r\n            <Meta title={\"Login\"} />\r\n            <BreadCrumb title={t(\"Login\")} />\r\n            <Container class1=\"login-wrapper py-3 home-wrapper-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex\">\r\n                        <div className=\"auth-card\">\r\n                            <h3 className='text-center mb-3'>{t(\"Login\")}</h3>\r\n                            <form action=\"\" onSubmit={formik.handleSubmit} className='d-flex flex-column gap-15'>\r\n                                <CustomInput type=\"email\" name=\"email\" placeholder={t(\"Email\")} onChange={formik.handleChange(\"email\")} onBlur={formik.handleBlur(\"email\")} value={formik.values.email} />\r\n                                <div className=\"error\">\r\n                                    {formik.touched.email && formik.errors.email}\r\n                                </div>\r\n                                <CustomInput type=\"password\" name=\"password\" placeholder={t(\"Password\")} onChange={formik.handleChange(\"password\")} onBlur={formik.handleBlur(\"password\")} value={formik.values.password} />\r\n                                <div className=\"error\">\r\n                                    {formik.touched.password && formik.errors.password}\r\n                                </div>\r\n                                <div>\r\n                                    {/* <Link to=\"/forgot-password\">Forgot your password?</Link> */}\r\n                                    <div className=\"mt-3 d-flex justify-content-center gap-15 align-items-center\">\r\n                                        <button className='button border-0' type='submit'>{t(\"Login\")}</button>\r\n                                        <Link to='/signup' className=\"button signup\">{t(\"SignUp\")}</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Contact.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Home.js",["343","344","345","346","347","348","349","350","351","352","353","354","355","356"],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Store.js",["357","358","359"],[],"import { React, useEffect, useState } from 'react';\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport ProductCard from '../components/ProductCard';\r\nimport Container from '../components/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllProducts } from '../features/products/productSlice';\r\n\r\nconst Store = () => {\r\n  const productState = useSelector((state) => state?.product?.product);\r\n  const dispatch = useDispatch();\r\n  const [ brands, setBrands] = useState([]);\r\n  const [ categories, setCategories] = useState([]);\r\n  const [ tags, setTags] = useState([]);\r\n  const [ tag, setTag] = useState(null);\r\n  const [ category, setCategory] = useState(null);\r\n  const [ brand, setBrand] = useState(null);\r\n  const [ minPrice, setMinPrice] = useState(null);\r\n  const [ maxPrice, setMaxPrice] = useState(null);\r\n  const [ sort, setSort] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let newBrands = [];\r\n    let category = [];\r\n    let newTags = [];\r\n    for (let index = 0; index < productState.length; index++) {\r\n      const element = productState[index];\r\n      newBrands.push(element.brand);\r\n      category.push(element.category);\r\n      newTags.push(element.tags);\r\n    }\r\n    setBrands(newBrands);\r\n    setCategories(category);\r\n    setTags(newTags);\r\n  }, [productState]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [sort, tag, brand, category, minPrice, maxPrice]);\r\n  \r\n  const getProducts = () => {\r\n    dispatch(getAllProducts({sort, tag, brand, category, minPrice, maxPrice}));\r\n  };\r\n\r\n  \r\n  return (\r\n    <>\r\n      <Meta title={\"Store\"} />\r\n      <BreadCrumb title='Store' />\r\n      <Container class1=\"store-wrapper home-wrapper-2 py-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <div className='filter-card mb-3'>\r\n                <h3 className=\"filter-title\">\r\n                  Shop By Categories\r\n                </h3>\r\n                <div>\r\n                  <ul className='ps-0'>\r\n                    {\r\n                      categories && [...new Set(categories)].map((item, index) => {\r\n                        return (<li key={index} onClick={() => setCategory(item)}>{item}</li>)\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className='filter-card mb-3'>\r\n                <h3 className=\"filter-title\">\r\n                  Filter By\r\n                </h3>\r\n                <div>\r\n                  <h5 className=\"sub-title\">Price</h5>\r\n                  <div className='d-flex align-items-center gap-10'>\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input type=\"number\" onChange={(e) => setMinPrice(e.target.value)} className=\"form-control\" id=\"floatingInput\" placeholder=\"From\" />\r\n                      <label htmlFor=\"floatingInput\">From</label>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input type=\"number\" onChange={(e) => setMaxPrice(e.target.value)} className=\"form-control\" id=\"floatingInput1\" placeholder=\"To\" />\r\n                      <label htmlFor=\"floatingInput1\">To</label>\r\n                    </div>\r\n                  </div>\r\n                  <h5 className=\"sub-title\">Availability</h5>\r\n                  <div>\r\n                    <div className=\"form-check\">\r\n                      <input className='form-check-input' type=\"checkbox\" value=\"\" id=\"\" />\r\n                      <label className='form-check-label' htmlFor=\"\">\r\n                        In Stock (2)\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input className='form-check-input' type=\"checkbox\" value=\"\" id=\"\" />\r\n                      <label className='form-check-label' htmlFor=\"\">\r\n                        Out of Stock (0)\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <h5 className=\"sub-title\">Condition</h5>\r\n                  <div>\r\n                    <div className=\"form-check\">\r\n                      <input className='form-check-input' type=\"checkbox\" value=\"\" id=\"\" />\r\n                      <label className='form-check-label' htmlFor=\"\">\r\n                        Brand-new (4)\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input className='form-check-input' type=\"checkbox\" value=\"\" id=\"\" />\r\n                      <label className='form-check-label' htmlFor=\"\">\r\n                        Perfect (5)\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input className='form-check-input' type=\"checkbox\" value=\"\" id=\"\" />\r\n                      <label className='form-check-label' htmlFor=\"\">\r\n                        Usable (3)\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input className='form-check-input' type=\"checkbox\" value=\"\" id=\"\" />\r\n                      <label className='form-check-label' htmlFor=\"\">\r\n                        Partially Efficient (2)\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='filter-card mb-3'>\r\n                <h3 className=\"sub-title\">\r\n                  Product Tags\r\n                </h3>\r\n                <div>\r\n                  <div className=\"product-tags d-flex flex-wrap align-items-center gap-10\">\r\n                  {\r\n                    brands && [...new Set(brands)].map((item, index) => {\r\n                      return (<span key={index} onClick={()=>setBrand(item)} className=\"text-capitalize badge bg-light text-secondary rounded-3 py-2 px-3\">{item}</span>)\r\n                    })\r\n                  }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <div className=\"filter-sort-grid mb-4\">\r\n                <div className='d-flex justify-content-between align-items-center'>\r\n                  <div className='d-flex align-items-center gap-10'>\r\n                    <p className=\"mb-0 d-block\" style={{ \"width\": \"100px\" }}>Sort By</p>\r\n                    <select name=\"\" className='form-control form-select' id=\"\" onChange={(e)=>setSort(e.target.value)}>\r\n                      <option value=\"title\">Alphabetically (A-Z)</option>\r\n                      <option value=\"price\">Price (Low to High)</option>\r\n                      <option value=\"-price\">Price (High to Low)</option>\r\n                      <option value=\"createdAt\">Date (New to Old)</option>\r\n                      <option value=\"-createdAt\">Date (Old to New)</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className='d-flex align-items-center gap-10'>\r\n                    <p className=\"total-products mb-0\">21 Products</p>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"products-list pb-5\">\r\n                <div className=\"d-flex gap-10 flex-wrap justify-content-between\">\r\n                  <ProductCard data={productState ? productState : []} />\r\n                  <ProductCard />\r\n                  <ProductCard />\r\n                  <ProductCard />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Store","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/CompareProduct.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Wishlist.js",["360"],[],"import React, {useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport Container from '../components/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserProductWishlist } from '../features/user/userSlice';\r\nimport { deleteFromWishlist } from '../features/products/productSlice';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n//30.line change the deffault image\r\nconst Wishlist = () => {\r\n    const { t } = useTranslation();\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\r\n    const isMobile = useMediaQuery({ query: '(max-width: 1223px)' });\r\n\r\n    const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n  ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n  : null;\r\n\r\n  const config2 = {\r\n      headers: {\r\n      Authorization: `Bearer ${\r\n          getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n      }`,\r\n      Accept: \"application/json\",\r\n      User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n      },\r\n  };\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        getWishlistFromDb();\r\n    }, []);\r\n    const getWishlistFromDb = () => {\r\n        dispatch(getUserProductWishlist(config2));\r\n    };\r\n    const wishlistState = useSelector((state) => state?.user?.wishlist?.wishlist); //.Wishlist.Wishlist olabilir son wishlist ismi değişebilir ya da productslicede state.\"\" kısmı buranın son değişkeni  olabilir\r\n    const removeFromWishlist = (id) => {\r\n        dispatch(deleteFromWishlist({id:id, config2:config2}));\r\n        setTimeout(() => {\r\n            //dispatch(addToWishlist(id));\r\n            window.location.reload(false);          \r\n        }, 300);\r\n    }\r\n    return (\r\n        <>    \r\n            {isDesktop && <>\r\n                <Meta title={\"Wishlist\"} />\r\n                <BreadCrumb title={t(\"Wishlist\")} />\r\n                <Container class1=\"wishlist-wrapper home-wrapper-2 py-5\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                wishlistState && wishlistState.length === 0 && <div className=\"text-center fs-3\">\r\n                                    {t(\"NoProdAdded\")}\r\n                                </div>\r\n                            }\r\n                            {\r\n                                wishlistState && wishlistState?.map((item, index) => {\r\n                                    return(\r\n                                        <div className=\"col-3\" key={index}>\r\n                                            <div className=\"wishlist-card position-relative\">\r\n                                                <img onClick={() => {removeFromWishlist(item?._id)}} src=\"images/cross.svg\" alt=\"cross\" className=\"position-absolute cross img-fluid\" />\r\n                                                <div className=\"wishlist-card-image\">\r\n                                                    <img src={item?.images[0]?.url ? item?.images[0]?.url : \"images/cross.svg\"} className='img-fluid w-100 d-block mx-auto' alt=\"watch\" />\r\n                                                </div>\r\n                                                <div className='bg-white px-3 py-3 align-items-center justify-content-between'>\r\n                                                    <h6 className=\"brand\">{item?.brand}</h6>\r\n                                                    <h5 className='title'>{item?.title}</h5>\r\n                                                    <p className=\"price\">{item?.currency} {item?.price}</p>\r\n                                                    <Link to={'/product/'+ item?._id} style={{ alignItems: 'center', flex: 1, justifyContent: 'center'}} className='mt-3 mx-4 align-items-center justify-content-between button '>{t(\"DETAILS\")}</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            \r\n                        </div>\r\n                    </Container>\r\n            </>}\r\n\r\n            {isMobile && <>\r\n                <Meta title={\"Wishlist\"} />\r\n                <BreadCrumb title={t(\"Wishlist\")} />\r\n                <Container class1=\"wishlist-wrapper home-wrapper-2 py-5\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                wishlistState && wishlistState.length === 0 && <div className=\"text-center fs-3\">\r\n                                    {t(\"NoProdAdded\")}\r\n                                </div>\r\n                            }\r\n                            {\r\n                                wishlistState && wishlistState?.map((item, index) => {\r\n                                    return(\r\n                                        <div className=\"col-6 mt-3\" key={index}>\r\n                                            <div className=\"wishlist-card position-relative\">\r\n                                                <img onClick={() => {removeFromWishlist(item?._id)}} src=\"images/cross.svg\" alt=\"cross\" className=\"position-absolute cross img-fluid\" />\r\n                                                <div className=\"wishlist-card-image\">\r\n                                                    <img src={item?.images[0]?.url ? item?.images[0]?.url : \"images/cross.svg\"} className='img-fluid w-100 d-block mx-auto' alt=\"watch\" />\r\n                                                </div>\r\n                                                <div className='bg-white px-3 py-3 align-items-center justify-content-between'>\r\n                                                    <h6 className=\"brand\">{item?.brand}</h6>\r\n                                                    <h5 className='title'>{item?.title}</h5>\r\n                                                    <p className=\"price\">{item?.currency} {item?.price}</p>\r\n                                                    <Link to={'/product/'+ item?._id} style={{ alignItems: 'center', flex: 1, justifyContent: 'center'}} className='mt-3 mx-4 align-items-center justify-content-between button '>{t(\"DETAILS\")}</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            \r\n                        </div>\r\n                    </Container>\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Wishlist","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Signup.js",["361","362","363"],[],"import { React, useEffect, useState } from \"react\";\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport Container from '../components/Container';\r\nimport CustomInput from '../components/CustomInput';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser, loginUser } from '../features/user/userSlice';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst signUpSchema = yup.object({\r\n    firstname: yup.string().required(\"First name is required\"),\r\n    lastname: yup.string().required(\"Last name is required\"),\r\n    email: yup.string().email(\"Email should be valid\").required(\"Email is required\"),\r\n    mobile: yup.string().required(\"Mobile number is required\"),\r\n    company: yup.string(),\r\n    password: yup.string().required(\"Password is required\"),\r\n  });\r\n\r\nconst Signup = () => {\r\n    const { t } = useTranslation();\r\n    const authState = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            mobile: \"\",\r\n            password: \"\",\r\n            company: \"\",\r\n\r\n        },\r\n        validationSchema: signUpSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(registerUser(values));\r\n            //dispatch(loginUser((values?.email, values?.password)));\r\n            navigate('/');\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (authState.createdUser!==null && authState.isError === false){\r\n            //navigate('/login');\r\n        }\r\n    }, [authState]);\r\n\r\n    return (\r\n        <>\r\n            <Meta title={\"Sign Up\"} />\r\n            <BreadCrumb title={t(\"SignUp\")} />\r\n            <Container class1=\"login-wrapper py-3 home-wrapper-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex\">\r\n                        <div className=\"auth-card\">\r\n                            <h3 className='text-center mb-3'>{t(\"CreateAccount\")}</h3>\r\n                            <form action=\"\" onSubmit={formik.handleSubmit} className='d-flex flex-column gap-15'>\r\n                                <CustomInput type=\"text\" name=\"firstname\" placeholder={t(\"FNameStar\")} value={formik.values.firstname} onChange={formik.handleChange(\"firstname\")} onBlur={formik.handleBlur(\"firstname\")} />\r\n                                <div className=\"error\">\r\n                                    {formik.touched.firstname && formik.errors.firstname}\r\n                                </div>\r\n                                <CustomInput type=\"text\" name=\"lastname\" placeholder={t(\"LNameStar\")} value={formik.values.lastname} onChange={formik.handleChange(\"lastname\")} onBlur={formik.handleBlur(\"lastname\")} />\r\n                                <div className=\"error\">\r\n                                    {formik.touched.lastname && formik.errors.lastname}\r\n                                </div>\r\n                                <CustomInput type=\"tel\" name=\"mobile\" placeholder={t(\"MNumber\")} value={formik.values.mobile} onChange={formik.handleChange(\"mobile\")} onBlur={formik.handleBlur(\"mobile\")} />\r\n                                <div className=\"error\">\r\n                                    {formik.touched.mobile && formik.errors.mobile}\r\n                                </div>\r\n                                <CustomInput type=\"email\" name=\"email\" placeholder={t(\"EmailStar\")} value={formik.values.email} onChange={formik.handleChange(\"email\")} onBlur={formik.handleBlur(\"email\")} />\r\n                                <div className=\"error\">\r\n                                    {formik.touched.email && formik.errors.email}\r\n                                </div>\r\n                                <CustomInput type=\"text\" name=\"company\" placeholder={t(\"Company\")} value={formik.values.company} onChange={formik.handleChange(\"company\")} onBlur={formik.handleBlur(\"company\")} />\r\n                                <div className=\"error\">\r\n                                </div>\r\n                                <CustomInput type=\"password\" name=\"password\" placeholder={t(\"Password\")} value={formik.values.password} onChange={formik.handleChange(\"password\")} onBlur={formik.handleBlur(\"password\")} />\r\n                                <div className=\"error\">\r\n                                    {formik.touched.password && formik.errors.password}\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"mt-3 d-flex justify-content-center gap-15 align-items-center\">\r\n                                        <button className='button border-0' type='submit'>{t(\"SignUp\")}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ForgotPassword.js",["364","365"],[],"import React from 'react';\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Container from '../components/Container';\r\nimport CustomInput from '../components/CustomInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { forgotPasswordToken } from '../features/user/userSlice';\r\n\r\nconst emailSchema = yup.object({\r\n    email: yup.string().email(\"Email should be valid\").required(\"Email is required\"),\r\n  });\r\n\r\nconst ForgotPassword = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n\r\n        },\r\n        validationSchema: emailSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(forgotPasswordToken(values));\r\n        },\r\n    });\r\n    \r\n    return (\r\n        <>\r\n            <Meta title={\"Forgot Password\"} />\r\n            <BreadCrumb title='Forgot Password' />\r\n            <Container class1=\"login-wrapper py-3 home-wrapper-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"auth-card\">\r\n                            <h3 className='text-center mb-3'>Reset Your Password</h3>\r\n                            <p className='text-center mt-2 mb-3'>We will send you an email to reset your password</p>\r\n                            <form action=\"\" onSubmit={formik.handleSubmit} className='d-flex flex-column gap-15'>\r\n                                <CustomInput type=\"email\" name=\"email\" placeholder='Email' onChange={formik.handleChange(\"email\")} onBlur={formik.handleBlur(\"email\")} value={formik.values.email} />\r\n                                <div className=\"error text-center\">\r\n                                    {formik.touched.email && formik.errors.email}\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"mt-3 d-flex justify-content-center flex-column gap-15 align-items-center\">\r\n                                        <button className='button border-0' type='submit'>Submit</button>\r\n                                        <Link to=\"/login\">Cancel</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/PrivacyPolicy.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/FAQ.js",["366"],[],"import React from 'react';\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Container from '../components/Container';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FAQ = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n            <Meta title={\"Service Contracts\"} />\r\n            <BreadCrumb title={t(\"ServiceContracts\")} />\r\n            <Container class1=\"policy-wrapper py-5 home-wrapper-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"policy\">\r\n                            {t(\"ServiceContracts1\")}\r\n                            <br /><br />{t(\"ServiceContracts2\")}\r\n\r\n                            </div>\r\n                            <div className=\"mt-3 d-flex justify-content-center gap-15 align-items-center\">\r\n                                <Link to='/service-contract' className=\"button signup\">{t(\"ServiceContractsReq\")}</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FAQ","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/RefundPolicy.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ResetPassword.js",["367","368"],[],"import React from 'react';\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport Container from '../components/Container';\r\nimport CustomInput from '../components/CustomInput';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { resetPassword } from '../features/user/userSlice';\r\n\r\nconst passwordSchema = yup.object({\r\n    password: yup.string().required(\"Password is required\"),\r\n  });\r\n\r\nconst ResetPassword = () => {\r\n    const location = useLocation();\r\n    const getToken = location.pathname.split(\"/\")[2];\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: \"\",\r\n        },\r\n        validationSchema: passwordSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(resetPassword({token:getToken,password:values.password}));\r\n            navigate('/login');\r\n        },\r\n    });\r\n    \r\n    return (\r\n        <>\r\n            <Meta title={\"Reset Password\"} />\r\n            <BreadCrumb title='Reset Password' />\r\n            <Container class1=\"login-wrapper py-3 home-wrapper-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"auth-card\">\r\n                            <h3 className='text-center mb-3'>Set Your New Password</h3>\r\n                            <form action=\"\" onSubmit={formik.handleSubmit} className='d-flex flex-column gap-15'>\r\n                                <CustomInput type=\"pasword\" name=\"password\" placeholder='New Password' onChange={formik.handleChange(\"password\")} onBlur={formik.handleBlur(\"password\")} value={formik.values.password} />\r\n                                <div className=\"error\">\r\n                                    {formik.touched.password && formik.errors.password}\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"mt-3 d-flex justify-content-center gap-15 align-items-center\">\r\n                                        <button className='button border-0'>Reset</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ShippingPolicy.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/TermAndConditions.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ProductList.js",["369","370","371","372","373","374","375","376","377","378","379","380"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllProducts} from \"../features/products/productSlice\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport Container from '../components/Container';\r\nimport { AiOutlineEye } from \"react-icons/ai\";\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst columnsEn = [\r\n  {\r\n    title: \"SNo\",\r\n    dataIndex: \"key\",\r\n  },\r\n  {\r\n    title: \"ID\",\r\n    dataIndex: \"id\",\r\n  },\r\n  {\r\n    title: \"Title\",\r\n    dataIndex: \"title\",\r\n    sorter: (a, b) => a.title.length - b.title.length,\r\n  },\r\n  {\r\n    title: \"Model\",\r\n    dataIndex: \"model\",\r\n    sorter: (a, b) => a.model.length - b.model.length,\r\n  },\r\n  {\r\n    title: \"Category\",\r\n    dataIndex: \"category\",\r\n    sorter: (a, b) => a.category.length - b.category.length,\r\n  },\r\n  {\r\n    title: \"Condition\",\r\n    dataIndex: \"condition\",\r\n  },\r\n  {\r\n    title: \"Price\",\r\n    dataIndex: \"price\",\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    dataIndex: \"action\",\r\n  },\r\n];\r\n\r\nconst columnsTr = [\r\n  {\r\n    title: \"SNo\",\r\n    dataIndex: \"key\",\r\n  },\r\n  {\r\n    title: \"ID\",\r\n    dataIndex: \"id\",\r\n  },\r\n  {\r\n    title: \"Başlık\",\r\n    dataIndex: \"title\",\r\n    sorter: (a, b) => a.title.length - b.title.length,\r\n  },\r\n  {\r\n    title: \"Model\",\r\n    dataIndex: \"model\",\r\n    sorter: (a, b) => a.model.length - b.model.length,\r\n  },\r\n  {\r\n    title: \"Kategori\",\r\n    dataIndex: \"category\",\r\n    sorter: (a, b) => a.category.length - b.category.length,\r\n  },\r\n  {\r\n    title: \"Durum\",\r\n    dataIndex: \"condition\",\r\n  },\r\n  {\r\n    title: \"Ücret\",\r\n    dataIndex: \"price\",\r\n  },\r\n  {\r\n    title: \"İşlem\",\r\n    dataIndex: \"action\",\r\n  },\r\n];\r\n\r\nconst mobileColumnsEn = [\r\n  {\r\n    title: \"Title\",\r\n    dataIndex: \"title\",\r\n    sorter: (a, b) => a.title.length - b.title.length,\r\n  },\r\n  {\r\n    title: \"Category\",\r\n    dataIndex: \"category\",\r\n    sorter: (a, b) => a.category.length - b.category.length,\r\n  },\r\n  {\r\n    title: \"Price\",\r\n    dataIndex: \"price\",\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    dataIndex: \"action\",\r\n  },\r\n];\r\n\r\nconst mobileColumnsTr = [\r\n  {\r\n    title: \"Başlık\",\r\n    dataIndex: \"title\",\r\n    sorter: (a, b) => a.title.length - b.title.length,\r\n  },\r\n  {\r\n    title: \"Kategori\",\r\n    dataIndex: \"category\",\r\n    sorter: (a, b) => a.category.length - b.category.length,\r\n  },\r\n  {\r\n    title: \"Ücret\",\r\n    dataIndex: \"price\",\r\n  },\r\n  {\r\n    title: \"İşlem\",\r\n    dataIndex: \"action\",\r\n  },\r\n];\r\n\r\nconst Productlist = () => {\r\n  const { t } = useTranslation();\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\r\n  const isMobile = useMediaQuery({ query: '(max-width: 1223px)' });  \r\n  const productState = useSelector((state) => state?.product?.product);\r\n  const [open, setOpen] = useState(false);\r\n  const [prodId, setProdId] = useState(\"\");\r\n  const [ tag, setTag] = useState(null);\r\n  const [ category, setCategory] = useState(null);\r\n  const [ brand, setBrand] = useState(null);\r\n  const [ minPrice, setMinPrice] = useState(null);\r\n  const [ maxPrice, setMaxPrice] = useState(null);\r\n  const [ sort, setSort] = useState(null);\r\n  const showModal = (e) => {\r\n    setOpen(true);\r\n    setProdId(e);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [sort, tag, brand, minPrice, maxPrice]);\r\n\r\n  const getProducts = () => {\r\n    dispatch(\r\n      getAllProducts({ sort, tag, brand, category, minPrice, maxPrice })\r\n    );\r\n  };\r\n\r\n  const data1 = [];\r\n  const data2 = [];\r\n  for (let i = 0; i < productState.length; i++) {\r\n    let tempPrice = (productState[i].price===0 || productState[i].price===\"\") ? \"Request a Quote\" : productState[i].currency + \" \" + productState[i].price;\r\n    data1.push({\r\n      key: i + 1,\r\n      id: productState[i]._id.substr(productState[i]._id.length - 6),\r\n      title: productState[i].title,\r\n      model: productState[i].brand + \" \" + productState[i].model + \" \" + productState[i].submodel,\r\n      category: productState[i].category,\r\n      condition: productState[i].condition,\r\n      price: tempPrice,\r\n      action: (\r\n        <>\r\n          <Link\r\n            className=\"ms-3 fs-3 text-danger\"\r\n            to={`/product/${productState[i]._id}`}\r\n          >\r\n            <AiOutlineEye />\r\n          </Link>\r\n        </>\r\n      ),\r\n    });\r\n    data2.push({\r\n      key: i + 1,\r\n      title: productState[i].title,\r\n      category: productState[i].category,\r\n      price: tempPrice,\r\n      action: (\r\n        <>\r\n          <Link\r\n            className=\"ms-3 fs-3 text-danger\"\r\n            to={`/product/${productState[i]._id}`}\r\n          >\r\n            <AiOutlineEye />\r\n          </Link>\r\n        </>\r\n      ),\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {isDesktop && localStorage.getItem(\"lang\") === \"tr\" && <>\r\n        <Meta title={\"Product List\"} />\r\n        <BreadCrumb title={t(\"ProductList\")} />\r\n        <Container class1=\"policy-wrapper py-5 home-wrapper-2\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3 className=\"mb-4 title\">{t(\"Products\")}</h3>\r\n                        <div>\r\n                            <Table columns={columnsTr} dataSource={data1} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n      </>}\r\n\r\n      {isDesktop && localStorage.getItem(\"lang\") === \"en\" && <>\r\n        <Meta title={\"Product List\"} />\r\n        <BreadCrumb title={t(\"ProductList\")} />\r\n        <Container class1=\"policy-wrapper py-5 home-wrapper-2\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3 className=\"mb-4 title\">{t(\"Products\")}</h3>\r\n                        <div>\r\n                            <Table columns={columnsEn} dataSource={data1} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n      </>}\r\n\r\n      {isMobile && localStorage.getItem(\"lang\") === \"tr\" && <>\r\n        <Meta title={\"Product List\"} />\r\n        <BreadCrumb title={t(\"ProductList\")} />\r\n        <Container class1=\"policy-wrapper py-5 home-wrapper-2\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3 className=\"mb-4 d-flex align-items-center justify-content-center title\">Products</h3>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                            <Table columns={mobileColumnsTr} dataSource={data2} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n      </>}\r\n\r\n      {isMobile && localStorage.getItem(\"lang\") === \"en\" && <>\r\n        <Meta title={\"Product List\"} />\r\n        <BreadCrumb title={t(\"ProductList\")} />\r\n        <Container class1=\"policy-wrapper py-5 home-wrapper-2\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <h3 className=\"mb-4 d-flex align-items-center justify-content-center title\">Products</h3>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                            <Table columns={mobileColumnsEn} dataSource={data2} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n      </>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Productlist;\r\n","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Product.js",["381","382","383","384","385","386"],[],"import React, { useEffect, useState } from 'react';\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport ProductCard from '../components/ProductCard';\r\nimport MobileCard from '../components/MobileCard';\r\nimport ReactImageZoom from 'react-image-zoom';\r\nimport Container from '../components/Container';\r\nimport noImageIcon from \"../images/no-image.png\";\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAProduct, getAllProducts } from '../features/products/productSlice';\r\nimport { toast } from 'react-toastify';\r\nimport { addProdToCart, getUserCart, deleteUserCart } from '../features/user/userSlice';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n//8.video 11.42 eğer add to cart çalışmıyosa\r\nconst Product = () => {\r\n    const { t } = useTranslation();\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\r\n    const isMobile = useMediaQuery({ query: '(max-width: 1223px)' });\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [setup, setSetup] = useState(false);\r\n    const [service, setService] = useState(false);\r\n    const [alreadyAdded, setAlreadyAdded] = useState(false);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const getProductId = location.pathname.split('/')[2];\r\n    const dispatch = useDispatch();\r\n    const productState = useSelector(state => state?.product?.singleproduct);\r\n    const productsState = useSelector(state => state?.product?.product);\r\n    const cartState = useSelector(state => state?.user?.cartProducts);\r\n    const [photoState, setPhotoState] = useState(\"\");\r\n\r\n    const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n  ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n  : null;\r\n\r\n  const config2 = {\r\n      headers: {\r\n      Authorization: `Bearer ${\r\n          getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n      }`,\r\n      Accept: \"application/json\",\r\n      User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n      },\r\n  };\r\n\r\n    useEffect(() => {\r\n        dispatch(getAProduct(getProductId));\r\n        dispatch(getUserCart(config2));\r\n        dispatch(getAllProducts());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        for (let index = 0; index < cartState?.length; index++) { //cartState.length vardı koşulda\r\n            if(getProductId===cartState[index]?.productId?._id){\r\n                setAlreadyAdded(true);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const uploadCart = () => {\r\n        dispatch(deleteUserCart(config2));\r\n        let tempPrice = 0;\r\n        if(productState?.price !== null){\r\n            tempPrice = productState?.price\r\n        };\r\n        let tempCurrency = \"USD\";\r\n        if(productState?.currency !== \"\"){\r\n            tempCurrency = productState?.currency\r\n        };\r\n        dispatch(addProdToCart({productId: productState?._id, setup, service, quantity, currency: tempCurrency, price: tempPrice, config:config2}));\r\n        navigate('/checkout');\r\n    }\r\n    \r\n    const [otherProduct, setOtherProduct] = useState([]);\r\n    //related için istenen fonksiyonu sor ve ona göre burayı düzenle\r\n    useEffect(() => {\r\n        let data = [];\r\n        for (let index = 0; index < productsState?.length; index++) { //cartState.length vardı koşulda\r\n            const element = productsState[index];\r\n            if (element.category === productState?.category) {\r\n                data.push(element);\r\n            }\r\n            setOtherProduct(data);\r\n            if (data.length == 3) {\r\n                break;\r\n            }\r\n        }            \r\n        setPhotoState(productState?.images[0]?.url)\r\n    }, [productState]);\r\n\r\n    const props = { scale: 0.5, img: photoState ? photoState : noImageIcon };\r\n    return (\r\n        <>\r\n            {isDesktop && <>\r\n                <Meta title={\"Product Name\"} />\r\n                <BreadCrumb title={productState?.title} />\r\n                <Container class1=\"main-product-wrapper py-5 home-wrapper-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"main-product-image\">\r\n                                <div>\r\n                                    <ReactImageZoom {...props} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"other-product-images d-flex flex-wrap gap-15 justify-content-between\">\r\n                                {productState?.images.map((item, index) => {\r\n                                    return<div key={index}>\r\n                                        <img\r\n                                            src={item?.url}\r\n                                            className='img-fluid'\r\n                                            alt=\"\"\r\n                                            onClick={() => setPhotoState(item?.url)}\r\n                                        />\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"main-product-details\">\r\n                                <div className=\"border-bottom\">\r\n                                    <h3 className='title'>{productState?.title}</h3>\r\n                                    <p className='id'>ID: {productState?._id.substr(productState?._id.length - 6)}</p>\r\n                                </div>\r\n                                <div className=\"border-bottom\">\r\n                                    {(productState?.price===0 || productState?.price===\"\" || productState?.price===null) ? <p className=\"price my-2\">{t(\"RequestQuote\")}</p> : <p className=\"price my-2\">{productState?.currency ? productState?.currency : \"USD\"} {productState?.price}</p>}\r\n                                </div>\r\n                                <div className=\"py-3\">\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"BrandDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.brand}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"CategoryDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.category}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"TypeDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.type}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"ModelDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.model} {productState?.submodel}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"LocationDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.location}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"AgeDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.age}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"TagsDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.tags}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"ConditionDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.condition}</p>\r\n                                    </div>\r\n                                    {\r\n                                    true && <div className=\"d-flex gap-10 align-items-center my-2 form-check\">\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" onChange={(e)=>{console.log(\"changed\", e);setSetup(e.target.checked)}} value={setup}/>\r\n                                        {productState?.setupPrice===null || productState?.setupPrice===\"\" ? <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">{t(\"InstallationDot2\")}</label> : <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">{t(\"InstallationDot\")} {productState?.currency} {productState?.setupPrice}</label>}\r\n                                    </div>\r\n                                    }\r\n                                    {\r\n                                    true && <div className=\"d-flex gap-10 align-items-center my-2 form-check\">\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" onChange={(e)=>setService(e.target.checked)} value={service}/>\r\n                                        {productState?.servicePrice===null || productState?.servicePrice===\"\" ? <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">{t(\"WarrantyDot2\")}</label> : <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">{t(\"WarrantyDot\")} {productState?.currency} {productState?.servicePrice}</label>}\r\n                                    </div>\r\n                                    }\r\n                                    <div className='d-flex gap-15 align-items-center flex-row mt-2 mb-3'>\r\n                                        {\r\n                                            true && <>\r\n                                                <h3 className='product-heading'>{t(\"QuantityDot\")}</h3>\r\n                                                <div>\r\n                                                    <input type=\"number\" className='form-control' style={{ width: \"50px\" }} min={1} max={10} onChange={(e)=>setQuantity(e.target.value)} value={quantity}/>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                        <div className={alreadyAdded ? 'd-flex align-items-center gap-30 ms-0' : 'd-flex align-items-center gap-30 ms-5'}>\r\n                                            <button className='button border-0' type='submit' onClick={()=>uploadCart()}>{alreadyAdded ? t(\"GoCart\") : t(\"AddCart\")}</button>\r\n                                            {/*<button className=\"button signup border-0\">Buy It Now</button>*/}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 flex-column my-3'>\r\n                                        <h3 className='product-heading'>{t(\"DescriptionDot\")}</h3>\r\n                                        <p className='prduct-data' dangerouslySetInnerHTML={{ __html: productState?.description}}></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n                {/*\r\n                <Container class1=\"description-wrapper py-5 home-wrapper-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>Description</h4>\r\n                            <div className='bg-white p-3'>\r\n                                <p dangerouslySetInnerHTML={{ __html: productState?.description}}>\r\n                                    \r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n                */}\r\n                <Container class1=\"featured-wrapper py-5 home-wrapper-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"section-heading\">{t(\"Featured\")}</h3>\r\n                        </div>\r\n                        <ProductCard data={otherProduct}/>\r\n                        <ProductCard />\r\n                        <ProductCard />\r\n                    </div>\r\n                </Container>\r\n            </>}\r\n\r\n            {isMobile && <>\r\n                <Meta title={\"Product Name\"} />\r\n                <BreadCrumb title={productState?.title} />\r\n                <Container class1=\"main-product-wrapper py-5 home-wrapper-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"border-bottom\">\r\n                                <h3 className='title'>{productState?.title}</h3>\r\n                            </div>\r\n                            <div className=\"main-product-image\">\r\n                                <img\r\n                                    src={photoState ? photoState : noImageIcon}\r\n                                    className='img-fluid'\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"other-product-images d-flex flex-wrap gap-15 justify-content-between\">\r\n                                {productState?.images.map((item, index) => {\r\n                                    return<div key={index}>\r\n                                        <img\r\n                                            src={item?.url}\r\n                                            className='img-fluid'\r\n                                            alt=\"\"\r\n                                            onClick={() => setPhotoState(item?.url)}\r\n                                        />\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"main-product-details\">\r\n                                <div className=\"border-bottom\">\r\n                                    <h3 className='title'>{productState?.title}</h3>\r\n                                    <p className='id'>ID: {productState?._id.substr(productState?._id.length - 6)}</p>\r\n                                </div>\r\n                                <div className=\"border-bottom\">\r\n                                    {(productState?.price===0 || productState?.price===\"\" || productState?.price===null) ? <p className=\"price my-2\">Request a Quote</p> : <p className=\"price my-2\">{productState?.currency ? productState?.currency : \"USD\"} {productState?.price}</p>}\r\n                                </div>\r\n                                <div className=\"py-3\">\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"BrandDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.brand}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"CategoryDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.category}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"TypeDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.type}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"ModelDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.model} {productState?.submodel}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"LocationDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.location}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"AgeDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.age}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"TagsDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.tags}</p>\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 align-items-center my-2'>\r\n                                        <h3 className='product-heading'>{t(\"ConditionDot\")}</h3>\r\n                                        <p className='prduct-data'>{productState?.condition}</p>\r\n                                    </div>\r\n                                    {\r\n                                    true && <div className=\"d-flex gap-10 align-items-center my-2 form-check\">\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" onChange={(e)=>{console.log(\"changed\", e);setSetup(e.target.checked)}} value={setup}/>\r\n                                        {productState?.setupPrice===null || productState?.setupPrice===\"\" ? <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">{t(\"InstallationDot2\")}</label> : <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">{t(\"InstallationDot\")}{productState?.currency} {productState?.setupPrice}</label>}\r\n                                    </div>\r\n                                    }\r\n                                    {\r\n                                    true && <div className=\"d-flex gap-10 align-items-center my-2 form-check\">\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" onChange={(e)=>setService(e.target.checked)} value={service}/>\r\n                                        {productState?.servicePrice===null || productState?.servicePrice===\"\" ? <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">{t(\"WarrantyDot2\")}</label> : <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">{t(\"WarrantyDot\")}{productState?.currency} {productState?.servicePrice}</label>}\r\n                                    </div>\r\n                                    }\r\n                                    <div className='d-flex gap-15 align-items-center flex-row mt-2 mb-3'>\r\n                                        {\r\n                                            true && <>\r\n                                                <h3 className='product-heading'>{t(\"QuantityDot\")}</h3>\r\n                                                <div>\r\n                                                    <input type=\"number\" className='form-control' style={{ width: \"50px\" }} min={1} max={10} onChange={(e)=>setQuantity(e.target.value)} value={quantity}/>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                        <div className={alreadyAdded ? 'd-flex align-items-center gap-30 ms-0' : 'd-flex align-items-center gap-30 ms-5'}>\r\n                                            <button className='button border-0' type='submit' onClick={()=>uploadCart()}>{alreadyAdded ? t(\"GoCart\") : t(\"AddCart\")}</button>\r\n                                            {/*<button className=\"button signup border-0\">Buy It Now</button>*/}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='d-flex gap-10 flex-column my-3'>\r\n                                        <h3 className='product-heading'>{t(\"DescriptionDot\")}</h3>\r\n                                        <p className='prduct-data' dangerouslySetInnerHTML={{ __html: productState?.description}}></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n                {/*\r\n                <Container class1=\"description-wrapper py-5 home-wrapper-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>Description</h4>\r\n                            <div className='bg-white p-3'>\r\n                                <p dangerouslySetInnerHTML={{ __html: productState?.description}}>\r\n                                    \r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n                */}\r\n                <Container class1=\"featured-wrapper py-5 home-wrapper-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"section-heading\">{t(\"Featured\")}</h3>\r\n                        </div>\r\n                        <MobileCard data={[otherProduct[0],otherProduct[1]]}/>\r\n                        <MobileCard />\r\n                        <MobileCard />\r\n                    </div>\r\n                </Container>\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Product","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Checkout.js",["387","388","389","390","391","392","393"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { BiArrowBack } from 'react-icons/bi';\r\nimport watch from \"../images/watch.jpg\";\r\nimport Container from '../components/Container';\r\nimport ProductCard from '../components/ProductCard';\r\nimport ReactQuill from \"react-quill\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { getUserCart, createAnOrder, resetState, deleteUserCart } from '../features/user/userSlice';\r\nimport countryList from 'react-select-country-list';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n//dispatch(createAnOrder({totalPrice:totalAmount,orderedItems:cartProductState,shippingInfo:JSON.parse(localStorage.getItem(\"address\"))}));  gibi olucak \r\n//sonrasında dispatch(deleteUserCart(config2));\r\n//localStorage.removeItem(\"address\");\r\n//dispatch(resetState());\r\n\r\nconst shippingSchema = yup.object({\r\n    firstName: yup.string().required(\"First name is required\"),\r\n    lastName: yup.string().required(\"Last name is required\"),\r\n    address: yup.string().required(\"Address details are required\"),\r\n    city: yup.string().required(\"City is required\"),\r\n    country: yup.string().required(\"Country is required\"),\r\n    pincode: yup.number(),\r\n    description: yup.string(),\r\n  });\r\n\r\nconst Checkout = () => {\r\n    const { t } = useTranslation();\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\r\n    const isMobile = useMediaQuery({ query: '(max-width: 1223px)' });\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector(state=>state?.user?.user);\r\n    const cartState = useSelector(state=>state?.user?.cartProducts);\r\n    const [shippingInfo, setShippingInfo] = useState(null);\r\n    const [cartProductState, setCartProductState] = useState([]);\r\n    const navigate = useNavigate();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            city: \"\",\r\n            country: \"\",\r\n            pincode: \"\",\r\n            other: \"\",\r\n            description: \"\",\r\n        },\r\n        validationSchema: shippingSchema,\r\n        onSubmit: (values) => {\r\n            setShippingInfo(values);\r\n            localStorage.setItem(\"address\", JSON.stringify(values));\r\n            setTimeout(() => {\r\n                //buraya gelicek galiba fonksiyon\r\n                let temp=0;\r\n                if (cartState[0]?.productId?.price !== null ){\r\n                    temp=cartState[0]?.price;\r\n                }\r\n                if (cartState[0]?.setup === true && cartState[0]?.productId?.setupPrice !== null ){\r\n                    temp=temp+cartState[0].productId.setupPrice;\r\n                }\r\n                if (cartState[0]?.service === true && cartState[0]?.productId?.servicePrice !== null ){\r\n                    temp=temp+cartState[0].productId.servicePrice;\r\n                }\r\n                if (cartState[0]?.price === 0){\r\n                    temp = 0;\r\n                }\r\n                dispatch(createAnOrder({currency:cartState[0]?.currency, totalPrice:temp,orderedItems:{product:cartState[0]?.productId, quantity:cartState[0]?.quantity, price:cartState[0]?.price, setup:cartState[0]?.setup, service:cartState[0]?.service},shippingInfo:JSON.parse(localStorage.getItem(\"address\")), config:config2}));\r\n                dispatch(deleteUserCart(config2));\r\n                localStorage.removeItem(\"address\");\r\n                dispatch(resetState());\r\n                //window.location.reload(false);\r\n            }, 300)\r\n        },\r\n    });\r\n\r\n    const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n    ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n    : null;\r\n\r\n    const config2 = {\r\n        headers: {\r\n        Authorization: `Bearer ${\r\n            getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n        }`,\r\n        Accept: \"application/json\",\r\n        User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserCart(config2));\r\n    }, []);\r\n\r\n    /*\r\n    useEffect(() => {\r\n        let item=[];\r\n        for (let index = 0; index < cartState?.length; index++) {\r\n            item.push(cartState[index]);\r\n        }\r\n        setCartProductState(item);\r\n    }, [cartState]);\r\n    */\r\n\r\n    /*\r\n    useEffect(() => {\r\n        if(authState?.orderedProduct?.order!==null && authState?.orderedProduct?.success===true){\r\n            navigate(\"my-orders\");\r\n        }\r\n    }, [authState]);\r\n    */\r\n\r\n    return (\r\n        <>\r\n            {isDesktop && <>\r\n                <Container class1=\"checkout-wrapper py-5 home-wrapper-2\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col-7\">\r\n                                <div className=\"checkout-left-data\">\r\n                                    <h4 className=\"title\">{t(\"ContactInfo\")}</h4>\r\n                                    <p className=\"user-details\">{t(\"Name\")} : {authState?.firstname}  {authState?.lastname}</p>\r\n                                    <p className=\"user-details\">{t(\"Email\")} : {authState?.email}</p>\r\n                                    <p className=\"user-details\">{t(\"MobileNumber\")} : {authState?.mobile}</p>\r\n                                    <p className=\"user-details\">{t(\"Company\")} : {authState?.company}</p>\r\n                                    <h4 className=\"title my-3\">{t(\"ShippingAddress\")}</h4>\r\n                                    <form onSubmit={formik.handleSubmit} action=\"\" className='d-flex gap-15 flex-wrap justify-content-between'>\r\n                                        <div className='w-100'>\r\n                                            <select name=\"country\" value={formik.values.country} onChange={formik.handleChange(\"country\")} onBlur={formik.handleBlur(\"country\")} className='form-control form-select' id=\"\">\r\n                                                <option value=\"\" selected disabled>{t(\"SelectCountry\")}</option>\r\n                                                {countryList().getData().map((i, j) => {\r\n                                                    return (\r\n                                                        <option key={j} value={i.label}>\r\n                                                        {i.label}\r\n                                                        </option>\r\n                                                    );\r\n                                                    })}\r\n                                            </select>\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.country && formik.errors.country\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='flex-grow-1'>\r\n                                            <input type=\"text\" placeholder={t(\"FName\")} name='firstName' value={formik.values.firstName} onChange={formik.handleChange(\"firstName\")} onBlur={formik.handleBlur(\"firstName\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.firstName && formik.errors.firstName\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='flex-grow-1'>\r\n                                            <input type=\"text\" placeholder={t(\"LName\")} name='lastName' value={formik.values.lastName} onChange={formik.handleChange(\"lastName\")} onBlur={formik.handleBlur(\"lastName\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.lastName && formik.errors.lastName\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='w-100'>\r\n                                            <input type=\"text\" placeholder={t(\"Address\")} name='address' value={formik.values.address} onChange={formik.handleChange(\"address\")} onBlur={formik.handleBlur(\"address\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.address && formik.errors.address\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='w-100'>\r\n                                            <input type=\"text\" placeholder={t(\"Apt\")} name='other' value={formik.values.other} onChange={formik.handleChange(\"other\")} onBlur={formik.handleBlur(\"other\")} className=\"form-control\" />\r\n                                        </div>\r\n                                        <div className='flex-grow-1'>\r\n                                            <input type=\"text\" placeholder={t(\"City\")} name='city' value={formik.values.city} onChange={formik.handleChange(\"city\")} onBlur={formik.handleBlur(\"city\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.city && formik.errors.city\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='flex-grow-1'>\r\n                                            <input type=\"text\" placeholder={t(\"ZIP\")} name='pincode' value={formik.values.pincode} onChange={formik.handleChange(\"pincode\")} onBlur={formik.handleBlur(\"pincode\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.pincode && formik.errors.pincode\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex-grow-1\">\r\n                                            <ReactQuill\r\n                                            theme=\"snow\"\r\n                                            name=\"description\"\r\n                                            onChange={formik.handleChange(\"description\")}\r\n                                            value={formik.values.description}\r\n                                            placeholder={t(\"AnythingElse\")}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"error\">\r\n                                            {formik.touched.description && formik.errors.description}\r\n                                        </div>\r\n                                        <div className='w-100'>\r\n                                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                <Link to=\"/\" className='text-dark'>\r\n                                                    <BiArrowBack className='me-2' />\r\n                                                    {t(\"Return\")}\r\n                                                </Link>\r\n                                                <button className='button' type='submit'>\r\n                                                    {t(\"SendReq\")}\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-5 border-start align-items-center\">\r\n                                <h4 className=\"title\">{t(\"Product\")}</h4>\r\n                                <div className='py-4'>\r\n                                    {\r\n                                        cartState && cartState?.map((item, index) => {\r\n                                            return(\r\n                                                <div key={index} className=''>\r\n                                                <div className=\"product-card position-relative\">\r\n                                                <div className=\"product-image d-flex justify-content-center\">\r\n                                                    <img src={item?.productId?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                                                    <img src={item?.productId?.images[1] ? item?.productId?.images[1]?.url : item?.productId?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                                                </div>\r\n                                                <div className=\"product-details\">\r\n                                                    <h6 className=\"brand\">{item?.productId?.brand}</h6>\r\n                                                    <h5 className='product-title'>{item?.productId?.title}</h5>\r\n                                                    <p className=\"description\" dangerouslySetInnerHTML={{ __html: item?.productId?.description}} ></p>\r\n                                                    <p className=\"setup\">{item?.setup===true ? t(\"SetupPlus\") : \"\"}</p>\r\n                                                    <p className=\"service\">{item?.service===true ? t(\"ServicePlus\") : \"\"}</p>\r\n                                                    <p className=\"price\">{(item?.productId?.price===0 || item?.productId?.price === null) ? t(\"ReqQuote\") : item?.productId?.currency +\" \"+ item?.productId?.price}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            </div>\r\n\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n            </>}\r\n\r\n            {isMobile && <>\r\n                <Container class1=\"checkout-wrapper pt-3 pb-5 home-wrapper-2\">\r\n                        <div className=\"row align-items-center\">\r\n                        <div className=\"col-12 border-start align-items-center\">\r\n                                <h4 className=\"title d-flex justify-content-center\">{t(\"Product\")}</h4>\r\n                                <div className='pb-4'>\r\n                                    {\r\n                                        cartState && cartState?.map((item, index) => {\r\n                                            return(\r\n                                                <div key={index} className=''>\r\n                                                <div className=\"product-card position-relative\">\r\n                                                <div className=\"product-image d-flex justify-content-center\">\r\n                                                    <img src={item?.productId?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                                                    <img src={item?.productId?.images[1] ? item?.productId?.images[1]?.url : item?.productId?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                                                </div>\r\n                                                <div className=\"product-details\">\r\n                                                    <h6 className=\"brand\">{item?.productId?.brand}</h6>\r\n                                                    <h5 className='product-title'>{item?.productId?.title}</h5>\r\n                                                    <p className=\"description\" dangerouslySetInnerHTML={{ __html: item?.productId?.description}} ></p>\r\n                                                    <p className=\"setup\">{item?.setup===true ? t(\"SetupPlus\") : \"\"}</p>\r\n                                                    <p className=\"service\">{item?.service===true ? t(\"ServicePlus\") : \"\"}</p>\r\n                                                    <p className=\"price\">{(item?.productId?.price===0 || item?.productId?.price === null) ? t(\"ReqQuote\") : item?.productId?.currency +\" \"+ item?.productId?.price}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            </div>\r\n\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"checkout-left-data\">\r\n                                    <h4 className=\"title d-flex justify-content-center\">{t(\"ContactInfo\")}</h4>\r\n                                    <p className=\"user-details\">{t(\"Name\")} : {authState?.firstname}  {authState?.lastname}</p>\r\n                                    <p className=\"user-details\">{t(\"Email\")} : {authState?.email}</p>\r\n                                    <p className=\"user-details\">{t(\"MobileNumber\")} : {authState?.mobile}</p>\r\n                                    <p className=\"user-details\">{t(\"Company\")} : {authState?.company}</p>\r\n                                    <h4 className=\"title  d-flex justify-content-center my-3\">{t(\"ShippingAddress\")}</h4>\r\n                                    <form onSubmit={formik.handleSubmit} action=\"\" className='d-flex gap-15 flex-wrap justify-content-between'>\r\n                                        <div className='w-100'>\r\n                                            <select name=\"country\" value={formik.values.country} onChange={formik.handleChange(\"country\")} onBlur={formik.handleBlur(\"country\")} className='form-control form-select' id=\"\">\r\n                                                <option value=\"\" selected disabled>{t(\"SelectCountry\")}</option>\r\n                                                {countryList().getData().map((i, j) => {\r\n                                                    return (\r\n                                                        <option key={j} value={i.label}>\r\n                                                        {i.label}\r\n                                                        </option>\r\n                                                    );\r\n                                                    })}\r\n                                            </select>\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.country && formik.errors.country\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='flex-grow-1'>\r\n                                            <input type=\"text\" placeholder={t(\"FName\")} name='firstName' value={formik.values.firstName} onChange={formik.handleChange(\"firstName\")} onBlur={formik.handleBlur(\"firstName\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.firstName && formik.errors.firstName\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='flex-grow-1'>\r\n                                            <input type=\"text\" placeholder={t(\"LName\")} name='lastName' value={formik.values.lastName} onChange={formik.handleChange(\"lastName\")} onBlur={formik.handleBlur(\"lastName\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.lastName && formik.errors.lastName\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='w-100'>\r\n                                            <input type=\"text\" placeholder={t(\"Address\")} name='address' value={formik.values.address} onChange={formik.handleChange(\"address\")} onBlur={formik.handleBlur(\"address\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.address && formik.errors.address\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='w-100'>\r\n                                            <input type=\"text\" placeholder={t(\"Apt\")} name='other' value={formik.values.other} onChange={formik.handleChange(\"other\")} onBlur={formik.handleBlur(\"other\")} className=\"form-control\" />\r\n                                        </div>\r\n                                        <div className='flex-grow-1'>\r\n                                            <input type=\"text\" placeholder={t(\"City\")} name='city' value={formik.values.city} onChange={formik.handleChange(\"city\")} onBlur={formik.handleBlur(\"city\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.city && formik.errors.city\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='flex-grow-1'>\r\n                                            <input type=\"text\" placeholder={t(\"ZIP\")} name='pincode' value={formik.values.pincode} onChange={formik.handleChange(\"pincode\")} onBlur={formik.handleBlur(\"pincode\")} className=\"form-control\" />\r\n                                            <div className=\"error ms-2 my-1\">\r\n                                                {\r\n                                                    formik.touched.pincode && formik.errors.pincode\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex-grow-1\">\r\n                                            <ReactQuill\r\n                                            theme=\"snow\"\r\n                                            name=\"description\"\r\n                                            onChange={formik.handleChange(\"description\")}\r\n                                            value={formik.values.description}\r\n                                            placeholder={t(\"AnythingElse\")}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"error\">\r\n                                            {formik.touched.description && formik.errors.description}\r\n                                        </div>\r\n                                        <div className='w-100'>\r\n                                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                <Link to=\"/\" className='text-dark'>\r\n                                                    <BiArrowBack className='me-2' />\r\n                                                    {t(\"Return\")}\r\n                                                </Link>\r\n                                                <button className='button' type='submit'>\r\n                                                    {t(\"SendReq\")}\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Cart.js",["394","395"],[],"import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport watch from \"../images/watch.jpg\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport Container from '../components/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCartProduct, getUserCart, updateCartProduct } from '../features/user/userSlice';\r\n\r\n\r\nconst Cart = () => {\r\n\r\n  const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n  ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n  : null;\r\n\r\n  const config2 = {\r\n      headers: {\r\n      Authorization: `Bearer ${\r\n          getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n      }`,\r\n      Accept: \"application/json\",\r\n      User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n      },\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [productUpdateDetail, setProductUpdateDetail] = useState(null);\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n  const userCartState = useSelector(state=>state?.user?.cartProducts);\r\n  useEffect(() => {\r\n    dispatch(getUserCart(config2));\r\n  }, []);\r\n  useEffect(() => {\r\n    if(productUpdateDetail!==null) {\r\n      dispatch(updateCartProduct({cartItemId:productUpdateDetail?.cartItemId, quantity:productUpdateDetail?.quantity}));\r\n      setTimeout(()=>{\r\n        dispatch(getUserCart(config2));\r\n      },200);\r\n    }\r\n  }, [productUpdateDetail]);\r\n\r\n\r\n  const deleteACartProduct = (id) => {\r\n    dispatch(deleteCartProduct({id:id, config2:config2}));\r\n    setTimeout(()=>{\r\n      dispatch(getUserCart(config2));\r\n    },200);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    for (let index = 0; index < userCartState?.length; index++) {\r\n      sum = sum + (Number(userCartState[index].quantity) * userCartState[index].price);\r\n      setTotalAmount(sum);\r\n    }\r\n  }, [userCartState]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Meta title={\"Cart\"} />\r\n      <BreadCrumb title='Cart' />\r\n      <Container class1='cart-wrapper home-wrapper-2 py-5'>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"cart-header py-3 d-flex justify-content-between align-items-center\">\r\n                <h4 className='cart-col-1'>Product</h4>\r\n                <h4 className='cart-col-2'>Price</h4>\r\n                <h4 className='cart-col-3'>Quantity</h4>\r\n                <h4 className='cart-col-4'>Total</h4>\r\n              </div>\r\n              {\r\n                userCartState && userCartState?.map((item, index) => {\r\n                  return(\r\n                  <div key={index} className=\"cart-data py-3 mb-2 d-flex justify-content-between align-items-center\">\r\n                  <div className='cart-col-1 gap-15 d-flex align-items-center'>\r\n                    <div className='w-25'>\r\n                      <img src={watch} className='img-fluid' alt=\"product_img\" />\r\n                    </div>\r\n                    <div className='w-75'>\r\n                      <h5 className='title'>{item?.productId.title}</h5>\r\n                      <p>+ Setup</p>\r\n                      <p>+ Service</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='cart-col-2'>\r\n                    <h5 className='price'>{item?.currency} {item?.price}</h5>\r\n                  </div>\r\n                  <div className='cart-col-3 d-flex align-items-center gap-15'>\r\n                    <div>\r\n                      <input className='form-control' type=\"number\" name={\"quantity\"+item?._id} min={1} max={10} id={\"cart\"+item?._id} value={item?.quantity} onChange={(e) => {setProductUpdateDetail({cartItemId:item?._id, quantity:e.target.value})}} />\r\n                    </div>\r\n                    <div>\r\n                    <MdDelete onClick={()=>{deleteACartProduct(item?._id)}} className='text-danger' />\r\n                    </div>\r\n                  </div>\r\n                  <div className='cart-col-4'>\r\n                    <h5 className='price'>{item?.currency} {item?.price * item?.quantity}</h5>\r\n                  </div>\r\n                </div>);\r\n                })\r\n              }\r\n\r\n              \r\n            </div>\r\n            <div className=\"col-12 py-2\">\r\n              <div className='d-flex justify-content-between align-items-baseline'>\r\n                <Link to=\"/product\" className=\"button\">Continue To Shopping</Link>\r\n                {\r\n                  (totalAmount !== null || totalAmount !== 0) &&\r\n                  <div className='d-flex flex-column align-items-end'>\r\n                    <h4>SubTotal: $ {totalAmount}</h4>\r\n                    <p>Taxes and shipping calculated at checkout</p>\r\n                    <Link to=\"/checkout\" className=\"button mt-3\">Checkout</Link>\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </Container>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cart","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Orders.js",["396"],[],"import React, { useEffect } from 'react'\r\nimport Container from '../components/Container'\r\nimport BreadCrumb from '../components/BreadCrumb'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserOrder } from '../features/user/userSlice'\r\n\r\nconst Orders = () => {\r\n    const dispatch = useDispatch();\r\n    const orderState = useSelector(state=>state?.auth?.getorderedProduct?.orders);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserOrder());\r\n    }, []);\r\n\r\n  return (\r\n    <>\r\n        <BreadCrumb title='My Orders' />\r\n        <Container class1='cart-warpper home-wrapper-2 py-5'>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <h5>Order Id</h5>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h5>Total Amount</h5>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h5>Status</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-3\">\r\n                    {\r\n                        orderState && orderState?.map((item,index) => {\r\n                            return (\r\n                                <div style={{backgroundColor:\"#febd69\"}} className=\"row pt-3 my-3\" key={index}>\r\n                                    <div className=\"col-4\">\r\n                                        <p>{item?._id}</p>\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <p>{item?.currency} {item?.totalPrice}</p>\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <p>{item?.orderStatus}</p>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"row py-3\" style={{backgroundColor:\"#232f3e\"}}>\r\n                                            <div className=\"col-4\">\r\n                                                <h5 className='text-white'>Product Name</h5>\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <h5 className='text-white'>Quantity</h5>\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <h5 className='text-white'>Price</h5>\r\n                                            </div>\r\n                                            {\r\n                                                item?.orderItems?.map((item,index) => {\r\n                                                    return(\r\n                                                        <div className=\"col-12\">\r\n                                                            <div className=\"row p-3\" style={{backgroundColor:\"#232f3e\"}}>\r\n                                                                <div className=\"col-4\">\r\n                                                                    <p className='text-white'>{item?.product?.title}</p>\r\n                                                                </div>\r\n                                                                <div className=\"col-4\">\r\n                                                                    <p className='text-white'>{item?.quantity}</p>\r\n                                                                </div>\r\n                                                                <div className=\"col-4\">\r\n                                                                    <p className='text-white'>{item?.currency} {item?.price}</p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Orders","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ServiceEngineer.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/ServiceContract.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Offer.js",["397","398","399","400","401","402"],[],"import { React, useEffect, useState } from 'react';\r\nimport BreadCrumb from '../components/BreadCrumb';\r\nimport Meta from '../components/Meta';\r\nimport Container from '../components/Container';\r\nimport CustomInput from \"../needed/CustomInput\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBrands } from \"../needed/brand/brandSlice\";\r\nimport { getCategories } from \"../needed/pcategory/pcategorySlice\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { delImg, uploadImg, resetImg } from \"../needed/upload/uploadSlice\";\r\nimport { createProducts, resetState } from \"../features/products/productSlice\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nlet schema = yup.object().shape({\r\n  ownerId: yup.string(),\r\n  title: yup.string().required(\"Title is Required\"),\r\n  description: yup.string().required(\"Description is Required\"),\r\n  category: yup.string().required(\"Category is Required\"),\r\n  brand: yup.string().required(\"Brand is Required\"),\r\n  model: yup.string(),\r\n  submodel: yup.string(),\r\n  location: yup.string().required(\"Location is Required\"),\r\n  condition: yup.string().required(\"Condition is Required\"),\r\n  age: yup.number(),\r\n  quantity: yup.number().required(\"Quantity is Required\"),\r\n  currency: yup.string(),\r\n  price: yup.number(),\r\n  });\r\n\r\nconst Offer = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n  ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n  : null;\r\n\r\n  const config2 = {\r\n      headers: {\r\n      Authorization: `Bearer ${\r\n          getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n      }`,\r\n      Accept: \"application/json\",\r\n      User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n      },\r\n  };\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const userState = useSelector(state=>state?.user?.user);\r\n    const [images, setImages] = useState([]);\r\n    useEffect(() => {\r\n      dispatch(getBrands());\r\n      dispatch(getCategories());\r\n    }, []);\r\n  \r\n    const brandState = useSelector((state) => state.brand.brands);\r\n    const catState = useSelector((state) => state.pCategory.pCategories);\r\n  \r\n    const imgState = useSelector((state) => state.upload.images);\r\n    const newProduct = useSelector((state) => state.product);\r\n    const { isSuccess, isError, isLoading, createdProduct } = newProduct;\r\n    useEffect(() => {\r\n      if (isSuccess && createdProduct) {\r\n        toast.success(\"Product Added Successfullly!\");\r\n      }\r\n      if (isError) {\r\n        toast.error(\"Something Went Wrong!\");\r\n      }\r\n    }, [isSuccess, isError, isLoading]);\r\n    \r\n    /*\r\n    const img = [];\r\n    imgState.forEach((i) => {\r\n      img.push({\r\n        public_id: i.public_id,\r\n        asset_id: i.asset_id,\r\n        url: i.url,\r\n      });\r\n      console.log(\"foreachhh\", i, img);\r\n    });\r\n    */\r\n  \r\n    useEffect(() => {\r\n      formik.values.images = imgState;\r\n    }, [imgState]);\r\n    \r\n    const formik = useFormik({\r\n      initialValues: {\r\n        ownerId:userState?._id,\r\n        title: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n        submodel: \"\",\r\n        location: \"\",\r\n        condition: \"\",\r\n        age: \"\",\r\n        quantity: \"\",\r\n        currency: \"\",\r\n        price: \"\",\r\n        images: \"\",\r\n      },\r\n      validationSchema: schema,\r\n      onSubmit: (values) => {\r\n        dispatch(createProducts({data:values, config2: config2}));\r\n        formik.resetForm();\r\n        //img=[];\r\n        setTimeout(() => {\r\n          dispatch(resetState());\r\n          dispatch(resetImg());\r\n          window.location.reload();\r\n        }, 1000);\r\n      },\r\n    });\r\n\r\n  return (\r\n    <>\r\n            <Meta title={\"Offer\"} />\r\n            <BreadCrumb title={t(\"Offer\")} />\r\n            <Container class1=\"policy-wrapper py-5 home-wrapper-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"policy\">\r\n                            <div>\r\n      <h3 className=\"mb-4 title\">{t(\"AddItem\")}</h3>\r\n      <div>\r\n        <form\r\n          onSubmit={formik.handleSubmit}\r\n          className=\"d-flex gap-3 flex-column\"\r\n        >\r\n          <CustomInput\r\n            type=\"text\"\r\n            label=\"Enter Item Title\"\r\n            name=\"title\"\r\n            onChng={formik.handleChange(\"title\")}\r\n            onBlr={formik.handleBlur(\"title\")}\r\n            val={formik.values.title}\r\n          />\r\n          <div className=\"my-0\">\r\n            <ReactQuill\r\n              placeholder={t(\"Headline\")}\r\n              theme=\"snow\"\r\n              name=\"description\"\r\n              onChange={formik.handleChange(\"description\")}\r\n              value={formik.values.description}\r\n            />\r\n          </div>\r\n          <select\r\n            name=\"category\"\r\n            onChange={formik.handleChange(\"category\")}\r\n            onBlur={formik.handleBlur(\"category\")}\r\n            value={formik.values.category}\r\n            className=\"form-control py-3 mb-3\"\r\n            id=\"\"\r\n          >\r\n            <option value=\"\">{t(\"SelectCat\")}</option>\r\n            {catState.map((i, j) => {\r\n              return (\r\n                <option key={j} value={i.title}>\r\n                  {i.title}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <select\r\n            name=\"brand\"\r\n            onChange={formik.handleChange(\"brand\")}\r\n            onBlur={formik.handleBlur(\"brand\")}\r\n            value={formik.values.brand}\r\n            className=\"form-control py-3 mb-3\"\r\n            id=\"\"\r\n          >\r\n            <option value=\"\">{t(\"SelectBrand\")}</option>\r\n            {brandState.map((i, j) => {\r\n              return (\r\n                <option key={j} value={i.title}>\r\n                  {i.title}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <CustomInput\r\n            type=\"text\"\r\n            label={t(\"EnterModel\")}\r\n            name=\"model\"\r\n            onChng={formik.handleChange(\"model\")}\r\n            onBlr={formik.handleBlur(\"model\")}\r\n            val={formik.values.model}\r\n          />\r\n          <CustomInput\r\n            type=\"text\"\r\n            label={t(\"EnterSubmodel\")}\r\n            name=\"submodel\"\r\n            onChng={formik.handleChange(\"submodel\")}\r\n            onBlr={formik.handleBlur(\"submodel\")}\r\n            val={formik.values.submodel}\r\n          />\r\n          <CustomInput\r\n            type=\"text\"\r\n            label={t(\"EnterLoc\")}\r\n            name=\"location\"\r\n            onChng={formik.handleChange(\"location\")}\r\n            onBlr={formik.handleBlur(\"location\")}\r\n            val={formik.values.location}\r\n          />\r\n          <select\r\n            name=\"condition\"\r\n            onChange={formik.handleChange(\"condition\")}\r\n            onBlur={formik.handleBlur(\"condition\")}\r\n            value={formik.values.condition}\r\n            className=\"form-control py-3 my-3\"\r\n            id=\"\"\r\n          >\r\n            <option value=\"\" disabled>\r\n            {t(\"SelectCond\")}\r\n            </option>\r\n            <option value=\"New\">{t(\"New\")}</option>\r\n            <option value=\"New - Open Box\">{t(\"OpenBox\")}</option>\r\n            <option value=\"Working/Good Condition\">{t(\"Working\")}</option>\r\n            <option value=\"Refurbished\">{t(\"Refurbished\")}</option>\r\n            <option value=\"Consumables and Spare Parts\">{t(\"Consumables\")}</option>\r\n            <option value=\"Not Working/For Parts Only\">{t(\"NotWorking\")}</option>\r\n            <option value=\"Not Tested\">{t(\"NotTested\")}</option>\r\n            <option value=\"Other\">{t(\"Other\")}</option>\r\n          </select>\r\n          <CustomInput\r\n            type=\"number\"\r\n            label={t(\"EnterYear\")}\r\n            name=\"age\"\r\n            onChng={formik.handleChange(\"age\")}\r\n            onBlr={formik.handleBlur(\"age\")}\r\n            val={formik.values.age}\r\n          />\r\n          <CustomInput\r\n            type=\"number\"\r\n            label={t(\"EnterQuantity\")}\r\n            name=\"quantity\"\r\n            onChng={formik.handleChange(\"quantity\")}\r\n            onBlr={formik.handleBlur(\"quantity\")}\r\n            val={formik.values.quantity}\r\n          />\r\n          <div className=\"row\">\r\n            <p>{t(\"PriceWarning\")}</p>\r\n            <div className=\"col-4\">\r\n              <select\r\n                name=\"currency\"\r\n                onChange={formik.handleChange(\"currency\")}\r\n                onBlur={formik.handleBlur(\"currency\")}\r\n                value={formik.values.currency}\r\n                className=\"form-control py-3 my-3\"\r\n                id=\"\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                {t(\"SelectCurrency\")}\r\n                </option>\r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"EUR\">EUR</option>\r\n                <option value=\"TRY\">TRY</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <CustomInput\r\n                type=\"number\"\r\n                label={t(\"EnterPrice\")}\r\n                name=\"price\"\r\n                onChng={formik.handleChange(\"price\")}\r\n                onBlr={formik.handleBlur(\"price\")}\r\n                val={formik.values.price}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white border-1 p-5 text-center\">\r\n            <Dropzone\r\n              onDrop={(acceptedFiles) => dispatch(uploadImg({data:acceptedFiles, config:config2}))}\r\n            >\r\n              {({ getRootProps, getInputProps }) => (\r\n                <section>\r\n                  <div {...getRootProps()}>\r\n                    <input {...getInputProps()} />\r\n                    <p>\r\n                    {t(\"Click\")} <span style={{background:\"#232f3e\", color:\"white\"}}> &nbsp; {t(\"Here\")}&nbsp; </span> &nbsp;{t(\"ToAddPhoto\")}\r\n                    </p>\r\n                  </div>\r\n                </section>\r\n              )}\r\n            </Dropzone>\r\n          </div>\r\n          <div className=\"showimages d-flex flex-wrap gap-3\">\r\n            {imgState?.map((i, j) => {\r\n              return (\r\n                <div className=\" position-relative\" key={j}>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => dispatch(delImg({images:imgState, id:i.public_id, config:config2}))}\r\n                    className=\"btn-close position-absolute\"\r\n                    style={{ top: \"10px\", right: \"10px\" }}\r\n                  ></button>\r\n                  <img src={i.url} alt=\"\" width={200} height={200} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-success border-0 rounded-3 my-5\"\r\n            type=\"submit\"\r\n          >\r\n            {t(\"PublishItem\")}\r\n          </button>\r\n          {formik.touched.title && formik.errors.title ? <div className=\"error\" style={{color: 'red'}}>{formik.touched.title && formik.errors.title} !</div> : \"\"}\r\n          {formik.touched.description && formik.errors.description ? <div className=\"error\" style={{color: 'red'}}>{formik.touched.description && formik.errors.description} !</div> : \"\"}\r\n          {formik.touched.category && formik.errors.category ? <div className=\"error\" style={{color: 'red'}}>{formik.touched.category && formik.errors.category} !</div> : \"\"}\r\n          {formik.touched.brand && formik.errors.brand ? <div className=\"error\" style={{color: 'red'}}>{formik.touched.brand && formik.errors.brand} !</div> : \"\"}\r\n          {formik.touched.location && formik.errors.location ? <div className=\"error\" style={{color: 'red'}}>{formik.touched.location && formik.errors.location} !</div> : \"\"}\r\n          {formik.touched.condition && formik.errors.condition ? <div className=\"error\" style={{color: 'red'}}>{formik.touched.condition && formik.errors.condition} !</div> : \"\"}\r\n          {formik.touched.quantity && formik.errors.quantity ? <div className=\"error\" style={{color: 'red'}}>{formik.touched.quantity && formik.errors.quantity} !</div> : \"\"}\r\n        </form>\r\n      </div>\r\n    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Offer","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/pages/Profile.js",["403","404","405","406"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Container from '../components/Container'\r\nimport BreadCrumb from '../components/BreadCrumb'\r\nimport ProductCard from '../components/ProductCard';\r\nimport MobileProdCard from '../components/MobileProdCard';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserOrder, loginUser, updateProfile } from '../features/user/userSlice'\r\nimport { getAProduct, getMyProducts } from '../features/products/productSlice';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport {FiEdit} from 'react-icons/fi';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n/* Bunu ürünlerde servis ve kurulum için kullanabiliriz\r\n<div className=\"mb-3 form-check\">\r\n    <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\r\n    <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\r\n</div>\r\n*/\r\n\r\nconst profileSchema = yup.object({\r\n    firstname: yup.string().required(\"First name is required\"),\r\n    lastname: yup.string().required(\"Last name is required\"),\r\n    email: yup.string().email(\"Email should be valid\").required(\"Email is required\"),\r\n    mobile: yup.string().required(\"Mobile number is required\"),\r\n    company: yup.string(),\r\n  });\r\n\r\nconst Profile = () => {\r\n    const { t } = useTranslation();\r\n    const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\r\n    const isMobile = useMediaQuery({ query: '(max-width: 1223px)' });\r\n\r\n    const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n    ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n    : null;\r\n\r\n    const config2 = {\r\n        headers: {\r\n        Authorization: `Bearer ${\r\n            getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n        }`,\r\n        Accept: \"application/json\",\r\n        User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n        },\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const orderState = useSelector(state=>state?.user?.getorderedProduct);\r\n    const userState = useSelector(state=>state?.user?.user);\r\n    const productsState = useSelector(state => state?.product?.myProduct);\r\n    const [edit, setEdit] = useState(true);\r\n    const [otherProduct, setOtherProduct] = useState([]);\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize:true,\r\n        initialValues: {\r\n            firstname: userState.firstname,\r\n            lastname: userState.lastname,\r\n            email: userState.email,\r\n            mobile: userState.mobile,\r\n            company: userState.company || \"\",\r\n\r\n        },\r\n        validationSchema: profileSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(updateProfile({data:values, config2: config2}));\r\n            setEdit(true);\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserOrder(config2));\r\n        dispatch(getMyProducts());\r\n        //dispatch(loginUser());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        for (let index = 0; index < productsState?.length; index++) { //cartState.length vardı koşulda\r\n            const element = productsState[index];\r\n            //console.log(\"eşleşiyo mu\", element.ownerId, userState?._id);\r\n            if (element.ownerId === userState?._id) {\r\n                //console.log(\"eşleşiyo\", element.ownerId, userState?._id);\r\n                data.push(element);\r\n            }\r\n            setOtherProduct(data);\r\n        }            \r\n    }, [productsState, userState]);\r\n\r\n    const orderFunc = (Id) => {\r\n        let data = [];\r\n        for (let index = 0; index < productsState?.length; index++) { //cartState.length vardı koşulda\r\n            if (productsState[index]._id == Id) {\r\n                data.push(productsState[index]);\r\n            }\r\n        }\r\n        return data[0];\r\n    }\r\n\r\n  return (\r\n    <>\r\n        {isDesktop && <>\r\n            <BreadCrumb title={t(\"MyProfile\")} />\r\n            <Container class1='cart-warpper home-wrapper-2 py-5'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <h3 className='my-3'>{t(\"UpdateProfile\")}</h3>\r\n                            <FiEdit className='fs-3' onClick={()=>setEdit(false)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"example1\" className=\"form-label\">{t(\"FName\")}</label>\r\n                            <input type=\"text\" name=\"firstname\" disabled={edit} className=\"form-control\" id=\"example1\" value={formik.values.firstname} onChange={formik.handleChange('firstname')} onBlur={formik.handleBlur('firstname')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.firstname && formik.errors.firstname}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"example12\" className=\"form-label\">{t(\"LName\")}</label>\r\n                            <input type=\"text\" name=\"lastname\" disabled={edit} className=\"form-control\" id=\"example12\" value={formik.values.lastname} onChange={formik.handleChange('lastname')} onBlur={formik.handleBlur('lastname')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.lastname && formik.errors.lastname}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">{t(\"EmailAdd\")}</label>\r\n                            <input type=\"email\" name=\"email\" disabled={edit} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value={formik.values.email} onChange={formik.handleChange('email')} onBlur={formik.handleBlur('email')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.email && formik.errors.email}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail12\" className=\"form-label\">{t(\"MobileNumber\")}</label>\r\n                            <input type=\"number\" name=\"mobile\" disabled={edit} className=\"form-control\" id=\"exampleInputEmail12\" aria-describedby=\"emailHelp\" value={formik.values.mobile} onChange={formik.handleChange('mobile')} onBlur={formik.handleBlur('mobile')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.mobile && formik.errors.mobile}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"example3\" className=\"form-label\">{t(\"CompanyName\")}</label>\r\n                            <input type=\"text\" name=\"company\" disabled={edit} className=\"form-control\" id=\"example3\" value={formik.values.company} onChange={formik.handleChange('company')} onBlur={formik.handleBlur('company')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.company && formik.errors.company}\r\n                            </div>\r\n                        </div>\r\n                        {edit===false && <button type=\"submit\" className=\"btn btn-primary\">{t(\"Save\")}</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>           \r\n            </Container>\r\n            <Container class1='cart-warpper home-wrapper-2 py-5'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <h3 className='my-3'>{t(\"MyOrders\")}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-3\">\r\n                        {\r\n                            orderState && orderState?.map((item,index) => {\r\n                                return (\r\n                                    <div style={{backgroundColor:\"#febd69\"}} className=\"row pt-3 my-3\" key={index}>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"row py-3\" style={{backgroundColor:\"#232f3e\"}}>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-3\">\r\n                                                        <h5 style={{color: '#febd69'}}>{t(\"ProdName\")}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-3\">\r\n                                                        <h5 style={{color: '#febd69'}}>{t(\"Brand\")}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-3\">\r\n                                                        <h5 style={{color: '#febd69'}}>{t(\"Category\")}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-3\">\r\n                                                        <h5 style={{color: '#febd69'}}>{t(\"Price\")}</h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-3\">\r\n                                                        <h5 className='text-white'>{orderFunc(item?.orderedItems[0]?.product)?.title}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-3\">\r\n                                                        <h5 className='text-white'>{orderFunc(item?.orderedItems[0]?.product)?.brand}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-3\">\r\n                                                        <h5 className='text-white'>{orderFunc(item?.orderedItems[0]?.product)?.category}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-3\">\r\n                                                        <h5 className='text-white'>{(orderFunc(item?.orderedItems[0]?.product)?.price===0 || orderFunc(item?.orderedItems[0]?.product)?.price === null) ? t(\"ReqedQuote\") : orderFunc(item?.orderedItems[0]?.product)?.currency + \" \" + orderFunc(item?.orderedItems[0]?.product)?.price}</h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    item?.orderItems?.map((item,index) => {\r\n                                                        return(\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"row p-3\" style={{backgroundColor:\"#232f3e\"}}>\r\n                                                                    <div className=\"col-4\">\r\n                                                                        <p className='text-white'></p>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-4\">\r\n                                                                        <p className='text-white'>{item?.quantity}</p>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-4\">\r\n                                                                        <p className='text-white'>{item?.currency} {item?.price}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>       \r\n            </Container>\r\n            <Container class1='cart-warpper home-wrapper-2 py-5'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <h3 className='my-3'>{t(\"MyProducts\")}</h3>\r\n                            <Link to='/offer' className=\"button\">{t(\"NewOffer\")}</Link>\r\n                        </div>\r\n                    </div>\r\n                    <ProductCard data={otherProduct}/>\r\n                    <ProductCard />\r\n                    <ProductCard />\r\n                    <ProductCard />\r\n                </div>           \r\n            </Container>\r\n        </>}\r\n\r\n        {isMobile && <>\r\n            <BreadCrumb title={t(\"MyProfile\")} />\r\n            <Container class1='cart-warpper home-wrapper-2 py-5'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <h3 className='my-3'>{t(\"UpdateProfile\")}</h3>\r\n                            <FiEdit className='fs-3' onClick={()=>setEdit(false)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"example1\" className=\"form-label\">{t(\"FName\")}</label>\r\n                            <input type=\"text\" name=\"firstname\" disabled={edit} className=\"form-control\" id=\"example1\" value={formik.values.firstname} onChange={formik.handleChange('firstname')} onBlur={formik.handleBlur('firstname')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.firstname && formik.errors.firstname}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"example12\" className=\"form-label\">{t(\"LName\")}</label>\r\n                            <input type=\"text\" name=\"lastname\" disabled={edit} className=\"form-control\" id=\"example12\" value={formik.values.lastname} onChange={formik.handleChange('lastname')} onBlur={formik.handleBlur('lastname')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.lastname && formik.errors.lastname}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">{t(\"EmailAdd\")}</label>\r\n                            <input type=\"email\" name=\"email\" disabled={edit} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value={formik.values.email} onChange={formik.handleChange('email')} onBlur={formik.handleBlur('email')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.email && formik.errors.email}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputEmail12\" className=\"form-label\">{t(\"MobileNumber\")}</label>\r\n                            <input type=\"number\" name=\"mobile\" disabled={edit} className=\"form-control\" id=\"exampleInputEmail12\" aria-describedby=\"emailHelp\" value={formik.values.mobile} onChange={formik.handleChange('mobile')} onBlur={formik.handleBlur('mobile')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.mobile && formik.errors.mobile}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"example3\" className=\"form-label\">{t(\"CompanyName\")}</label>\r\n                            <input type=\"text\" name=\"company\" disabled={edit} className=\"form-control\" id=\"example3\" value={formik.values.company} onChange={formik.handleChange('company')} onBlur={formik.handleBlur('company')}/>\r\n                            <div className=\"error\">\r\n                                {formik.touched.company && formik.errors.company}\r\n                            </div>\r\n                        </div>\r\n                        {edit===false && <button type=\"submit\" className=\"btn btn-primary\">{t(\"Save\")}</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>           \r\n            </Container>\r\n            <Container class1='cart-warpper home-wrapper-2 py-3'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h3 className='d-flex justify-content-center'>{t(\"MyOrders\")}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {\r\n                            orderState && orderState?.map((item,index) => {\r\n                                return (\r\n                                    <div style={{backgroundColor:\"#febd69\"}} className=\"row pt-3 my-3\" key={index}>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"row py-3\" style={{backgroundColor:\"#232f3e\"}}>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-6\">\r\n                                                        <h5 style={{color: '#febd69'}}>{t(\"ProdName\")}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-6\">\r\n                                                        <h5 style={{color: '#febd69'}}>{t(\"Brand\")}</h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-6\">\r\n                                                        <h5 className='text-white'>{orderFunc(item?.orderedItems[0]?.product)?.title}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-6\">\r\n                                                        <h5 className='text-white'>{orderFunc(item?.orderedItems[0]?.product)?.brand}</h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mt-3\">\r\n                                                    <div className=\"col-6\">\r\n                                                        <h5 style={{color: '#febd69'}}>{t(\"Category\")}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-6\">\r\n                                                        <h5 style={{color: '#febd69'}}>{t(\"Price\")}</h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-6\">\r\n                                                        <h5 className='text-white'>{orderFunc(item?.orderedItems[0]?.product)?.category}</h5>\r\n                                                    </div>\r\n                                                    <div className=\"col-6\">\r\n                                                        <h5 className='text-white'>{(orderFunc(item?.orderedItems[0]?.product)?.price===0 || orderFunc(item?.orderedItems[0]?.product)?.price === null) ? t(\"ReqedQuote\") : orderFunc(item?.orderedItems[0]?.product)?.currency + \" \" + orderFunc(item?.orderedItems[0]?.product)?.price}</h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    item?.orderItems?.map((item,index) => {\r\n                                                        return(\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"row p-3\" style={{backgroundColor:\"#232f3e\"}}>\r\n                                                                    <div className=\"col-4\">\r\n                                                                        <p className='text-white'></p>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-4\">\r\n                                                                        <p className='text-white'>{item?.quantity}</p>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-4\">\r\n                                                                        <p className='text-white'>{item?.currency} {item?.price}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>       \r\n            </Container>\r\n            <Container class1='cart-warpper home-wrapper-2 py-5'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <h3 className='my-3'>{t(\"MyProducts\")}</h3>\r\n                            <Link to='/offer' className=\"button\">{t(\"NewOffer\")}</Link>\r\n                        </div>\r\n                    </div>\r\n                    <MobileProdCard data={otherProduct}/>\r\n                    <MobileProdCard />\r\n                    <MobileProdCard />\r\n                    <MobileProdCard />\r\n                </div>           \r\n            </Container>\r\n        </>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/routing/PrivateRoutes.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/counter/counterSlice.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/routing/OpenRoutes.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/products/productSlice.js",["407"],[],"import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport { productService } from \"./productService\";\r\n\r\nexport const getAllProducts = createAsyncThunk(\r\n  \"product/get\",\r\n  async (data, thunkAPI) => {\r\n    try {\r\n      return await productService.getListedProducts(data);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getMyProducts = createAsyncThunk(\r\n  \"product/get-my-product\",\r\n  async (data, thunkAPI) => {\r\n    try {\r\n      return await productService.getProducts(data);\r\n    } catch (error) {\r\n      if (error.response?.status===401) {\r\n        localStorage.removeItem(\"customer\");\r\n        window.location.reload();\r\n      }\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAProduct = createAsyncThunk(\r\n  \"product/getAProduct\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await productService.getSingleProduct(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addToWishlist = createAsyncThunk(\r\n  \"product/wishlist\",\r\n  async ( prodID, thunkAPI) => {\r\n    try {\r\n      return await productService.addToWishlist(prodID);\r\n    } catch (error) {\r\n      if (error.response?.status===401) {\r\n        localStorage.removeItem(\"customer\");\r\n        window.location.reload();\r\n      }\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteFromWishlist = createAsyncThunk(\r\n  \"product/delete-wishlist\",\r\n  async ( prodID, thunkAPI) => {\r\n    try {\r\n      return await productService.deleteFromWishlist(prodID);\r\n    } catch (error) {\r\n      if (error.response?.status===401) {\r\n        localStorage.removeItem(\"customer\");\r\n        window.location.reload();\r\n      }\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createProducts = createAsyncThunk(\r\n    \"product/create-products\",\r\n    async (productData, thunkAPI) => {\r\n      try {\r\n        //console.log(\"slicedddd\", productData);\r\n        return await productService.offerProduct(productData);\r\n      } catch (error) {\r\n        if (error.response?.status===401) {\r\n          localStorage.removeItem(\"customer\");\r\n          window.location.reload();\r\n        }\r\n        return thunkAPI.rejectWithValue(error);\r\n      }\r\n    }\r\n  );\r\n\r\nexport const resetState = createAction(\"Reset_all\");\r\n\r\nconst productState = {\r\n    product: [],\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: \"\",\r\n};\r\n\r\n\r\nexport const productSlice = createSlice({\r\n  name: \"product\",\r\n  initialState: productState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAllProducts.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAllProducts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.product = action.payload;\r\n      })\r\n      .addCase(getAllProducts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getMyProducts.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getMyProducts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.myProduct = action.payload;\r\n      })\r\n      .addCase(getMyProducts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(createProducts.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createProducts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.createdProduct = action.payload;\r\n      })\r\n      .addCase(createProducts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(addToWishlist.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(addToWishlist.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.addToWishlist = action.payload; // state.addwishlist hatalı olabilir \r\n        state.message = \"Product Added To Wishlist\"\r\n      })\r\n      .addCase(addToWishlist.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(deleteFromWishlist.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteFromWishlist.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.deleteFromWishlist = action.payload; // state.addwishlist hatalı olabilir \r\n        state.message = \"Product Deleted From Wishlist\"\r\n      })\r\n      .addCase(deleteFromWishlist.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getAProduct.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAProduct.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.singleproduct = action.payload;\r\n        state.message = \"Product Fetced Successfully!\"\r\n      })\r\n      .addCase(getAProduct.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(resetState, () => productState);\r\n  },\r\n});\r\n\r\nexport default productSlice.reducer;","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/user/userSlice.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/contact/contactSlice.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/brand/brandSlice.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/upload/uploadSlice.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/pcategory/pcategorySlice.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Footer.js",["408"],[],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsLinkedin, BsInstagram, BsYoutube, BsFacebook, BsTwitter } from 'react-icons/bs';\r\nimport newsletter from \"../images/newsletter.png\";\r\nimport contact1 from \"../images/contact-1.png\";\r\nimport contact2 from \"../images/contact-2.png\";\r\nimport contact3 from \"../images/contact-3.png\";\r\nimport contact4 from \"../images/contact-4.png\";\r\nimport { createQuery } from '../features/contact/contactSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport {useState} from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation();\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\r\n  const isMobile = useMediaQuery({ query: '(max-width: 1223px)' });\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState('');\r\n\r\n  function multiOnClick() {\r\n    dispatch(createQuery({name: \"\", email: message, mobile: \"\", comment: \"*MAIL LIST*\", status: \"MAIL LIST\"}))\r\n    setMessage('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isDesktop && <>\r\n        <footer className='py-4'>\r\n          <div className=\"container-xxl\">\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-5\">\r\n                <div className=\"footer-top-data d-flex gap-30 align-items-center\">\r\n                  <img src={newsletter} alt=\"newsletter\" />\r\n                  <h2 className='mb-0 text-white text-center'>{t(\"SubscribeTo\")}<br /> {t(\"AboutNews\")}</h2>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-5\">\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    id='email-list'\r\n                    type=\"text\"\r\n                    className=\"form-control py-1\"\r\n                    placeholder={t(\"EmailAddress\")}\r\n                    aria-label=\"Email Address...\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    value={message}\r\n                    onChange={(e) => {setMessage(e.target.value)}} />\r\n                  <span className=\"input-group-text p-2\" id=\"basic-addon2\" onClick={() => multiOnClick()}>\r\n                    {t(\"Subscribe\")}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <div className=\"social_icons d-flex align-items-center gap-15\">\r\n                  <a className='text-white' href=\"https://www.linkedin.com/in/labalsat-analyze-well-199752291/\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <BsLinkedin className='fs-4' size = {40}/>\r\n                  </a>\r\n                  <a className='text-white' href=\"https://www.instagram.com/labalsat/\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <BsInstagram className='fs-4' size = {40}/>\r\n                  </a>\r\n                  <a className='text-white' href=\"https://www.facebook.com/profile.php?id=61551040628169\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <BsFacebook className='fs-4' size = {40}/>\r\n                  </a>\r\n                  <a className='text-white' href=\"https://twitter.com/labAlsat\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <BsTwitter className='fs-4' size = {40}/>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        <footer className='py-4'>\r\n          <div className=\"container-xxl\">\r\n            <div className=\"row\">\r\n              <div className=\"col-1\">\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <h4 className='text-white mb-4'>{t(\"ContactUs\")}</h4>\r\n                <div>\r\n                  <address className='text-white fs-6'>Koşuyolu, İsmail Paşa Sk. No:33 <br />34718 Kadıköy/İstanbul</address>\r\n                  <a href=\"tel:+902164726956\" className=\"mt-2 d-block mb-1 text-white\"> <img className='me-2' src={contact2} alt='service-03' /> +90 216 472 6956</a>\r\n                  <a href=\"fax:+902164726956\" className=\"mt-2 d-block mb-1 text-white\"> <img className='me-2' src={contact4} alt='service-03' /> +90 216 472 6958</a>\r\n                  <a href=\"https://wa.me/905330515767\" className=\"mt-2 d-block mb-1 text-white\"> <img className='me-2' src={contact1} alt='service-03' /> +90 533 051 5767</a>\r\n                  <a href=\"mailto:info@pronitron.com\" className=\"mt-2 d-block mb-1 text-white\"> <img className='me-2' src={contact3} alt='service-03' /> info@pronitron.com</a>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <h4 className='text-white mb-4'>{t(\"Information\")}</h4>\r\n                <div className='footer-links d-flex flex-column'>\r\n                  <Link to='/privacy-policy' className=\"text-white py-1 mb-1\">{t(\"Guarantee\")}</Link>\r\n                  <Link to='/shipping-policy' className=\"text-white py-1 mb-1\">{t(\"Warranties\")}</Link>\r\n                  <Link to='/refund-policy' className=\"text-white py-1 mb-1\">{t(\"BroadScope\")}</Link>\r\n                  <Link to='/faq' className=\"text-white py-1 mb-1\">{t(\"ServiceContracts\")}</Link>\r\n                  <Link to='/service-engineer' className=\"text-white py-1 mb-1\">{t(\"ServiceEng\")}</Link>\r\n                  <Link to='/terms-conditions' className=\"text-white py-1 mb-1\">{t(\"TermsOfService\")}</Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <h4 className='text-white mb-4'>{t(\"Account\")}</h4>\r\n                <div className='footer-links d-flex flex-column'>\r\n                  <Link to='/my-profile' className=\"text-white py-1 mb-1\">{t(\"Profile\")}</Link>\r\n                  <Link to='/wishlist' className=\"text-white py-1 mb-1\">{t(\"Wishlist\")}</Link>\r\n                  <Link to='/my-profile' className=\"text-white py-1 mb-1\">{t(\"Orders\")}</Link>\r\n                  <Link to=\"/offer\" className=\"text-white py-1 mb-1\">{t(\"NewOffer\")}</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        <footer className='py-4'>\r\n          <div className=\"container-xxl\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <p className='text-center mb-0 text-white'>&copy; {new Date().getFullYear()}; {t(\"PoweredBy\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </>}\r\n\r\n      {isMobile && <>\r\n        <footer className='py-2'>\r\n          <div className=\"container-xxl d-flex align-items-center justify-content-center\">\r\n            <div className=\"row d-flex align-items-center justify-content-center\">\r\n                <div className=\"footer-top-data d-flex gap-30 align-items-center justify-content-center\">\r\n                  <h3 className='mb-0 text-white text-center'>{t(\"SubscribeTo\")} {t(\"AboutNews\")}</h3>\r\n                </div>\r\n                <div className=\"input-group py-2 d-flex justify-content-center \"  style={{maxWidth: \"600px\"}}>\r\n                  <input\r\n                    id='email-list'\r\n                    type=\"text\"\r\n                    className=\"form-control py-1\"\r\n                    placeholder={t(\"EmailAddress\")}\r\n                    aria-label=\"Email Address...\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    value={message}\r\n                    onChange={(e) => {setMessage(e.target.value)}} />\r\n                  <span className=\"input-group-text p-2\" id=\"basic-addon2\" onClick={() => multiOnClick()}>\r\n                    {t(\"Subscribe\")}\r\n                  </span>\r\n                </div>\r\n              <div className=\"py-2\">\r\n                <div className=\"social_icons d-flex align-items-center justify-content-center gap-15\">\r\n                  <a className='text-white' href=\"https://www.linkedin.com/in/labalsat-analyze-well-199752291/\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <BsLinkedin className='fs-4' size = {40}/>\r\n                  </a>\r\n                  <a className='text-white' href=\"https://www.instagram.com/labalsat/\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <BsInstagram className='fs-4' size = {40}/>\r\n                  </a>\r\n                  <a className='text-white' href=\"https://www.facebook.com/profile.php?id=61551040628169\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <BsFacebook className='fs-4' size = {40}/>\r\n                  </a>\r\n                  <a className='text-white' href=\"https://twitter.com/labAlsat\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <BsTwitter className='fs-4' size = {40}/>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        <footer className='py-4'>\r\n          <div className=\"container-xxl\">\r\n            <div className=\"row d-flex justify-content-center\">\r\n              <div className=\"col-1\"></div>\r\n              <div className=\"col-5\">\r\n                <h4 className='text-white mb-4'>{t(\"Information\")}</h4>\r\n                <div className='footer-links d-flex flex-column'>\r\n                  <Link to='/privacy-policy' className=\"text-white py-1 mb-1\">{t(\"Guarantee\")}</Link>\r\n                  <Link to='/shipping-policy' className=\"text-white py-1 mb-1\">{t(\"Warranties\")}</Link>\r\n                  <Link to='/refund-policy' className=\"text-white py-1 mb-1\">{t(\"BroadScope\")}</Link>\r\n                  <Link to='/faq' className=\"text-white py-1 mb-1\">{t(\"ServiceContracts\")}</Link>\r\n                  <Link to='/service-engineer' className=\"text-white py-1 mb-1\">{t(\"ServiceEng\")}</Link>\r\n                  <Link to='/terms-conditions' className=\"text-white py-1 mb-1\">{t(\"TermsOfService\")}</Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-1\"></div>\r\n              <div className=\"col-5\">\r\n                <h4 className='text-white mb-4'>{t(\"Account\")}</h4>\r\n                <div className='footer-links d-flex flex-column'>\r\n                  <Link to='/my-profile' className=\"text-white py-1 mb-1\">{t(\"Profile\")}</Link>\r\n                  <Link to='/wishlist' className=\"text-white py-1 mb-1\">{t(\"Wishlist\")}</Link>\r\n                  <Link to='/my-profile' className=\"text-white py-1 mb-1\">{t(\"Orders\")}</Link>\r\n                  <Link to=\"/offer\" className=\"text-white py-1 mb-1\">{t(\"NewOffer\")}</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n          <footer className='py-4'>\r\n          <div className=\"container-xxl\">\r\n            <div className=\"row d-flex justify-content-center\">\r\n                <h4 className='footer-top-data text-white mb-4 d-flex justify-content-center'>{t(\"ContactUs\")}</h4>\r\n                <div>\r\n                  <address className='text-white fs-6 d-flex justify-content-center'>Koşuyolu, İsmail Paşa Sk. No:33 <br />34718 Kadıköy/İstanbul</address>\r\n                  <a href=\"tel:+902164726956\" className=\"mt-2 d-block mb-1 text-white d-flex justify-content-center\"> <img className='me-2' src={contact2} alt='service-03' /> +90 216 472 6956</a>\r\n                  <a href=\"fax:+902164726956\" className=\"mt-2 d-block mb-1 text-white d-flex justify-content-center\"> <img className='me-2' src={contact4} alt='service-03' /> +90 216 472 6958</a>\r\n                  <a href=\"https://wa.me/905330515767\" className=\"mt-2 d-block mb-1 text-white d-flex justify-content-center\"> <img className='me-2' src={contact1} alt='service-03' /> +90 533 051 5767</a>\r\n                  <a href=\"mailto:info@pronitron.com\" className=\"mt-2 d-block mb-1 text-white d-flex justify-content-center\"> <img className='me-2' src={contact3} alt='service-03' /> info@pronitron.com</a>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n        <footer className='py-4'>\r\n          <div className=\"container-xxl\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <p className='text-center mb-0 text-white'>&copy; {new Date().getFullYear()}; {t(\"PoweredBy\")}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Header.js",["409","410","411","412","413","414","415"],[],"import React, { useEffect, useState } from 'react'\r\nimport { NavLink, Link, useNavigate } from 'react-router-dom';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport compare from \"../images/compare.svg\";\r\nimport wishlist from \"../images/wishlist.svg\";\r\nimport labalsatLogo from \"../images/yatay-labalsat.png\";\r\nimport user from \"../images/user.svg\";\r\nimport cart from \"../images/cart.svg\";\r\nimport menu from \"../images/menu.svg\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { getAProduct } from '../features/products/productSlice';\r\nimport { getUserCart, getUserProductWishlist } from '../features/user/userSlice';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../i18n';\r\n\r\n/*\r\n<div>\r\n                <Link to='/cart' className='d-flex align-items-center gap-10 text-white'>\r\n                  <img src={cart} alt='cart' />\r\n                  <div className='d-flex flex-column gap-10'>\r\n                    <span className='badge bg-white text-dark'>{cartState?.length ? cartState?.length : 0}</span>\r\n                    <p className='mb-0'>$ {total ? total : 0}</p>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n*/\r\n\r\n\r\nconst Header = () => {\r\n  const { t } = useTranslation();\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 1224px)' });\r\n  const isMobile = useMediaQuery({ query: '(max-width: 1223px)' });\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const cartState = useSelector(state=>state?.user?.cartProducts);\r\n  const authState = useSelector(state => state?.user);\r\n  const productState = useSelector(state => state?.product?.product);\r\n  const [productOpt, setProductOpt] = useState([]);\r\n  const [paginate, setPaginate] = useState(true);\r\n  //const options = range(0, 1000).map((o) => `Item ${o}`);\r\n  const [total, setTotal] = useState(null);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(i18n.language); // i18n.language contains the language assigned to lng in i18n.js file.\r\n\r\n\r\n  const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n  ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n  : null;\r\n\r\n  const config2 = {\r\n      headers: {\r\n      Authorization: `Bearer ${\r\n          getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n      }`,\r\n      Accept: \"application/json\",\r\n      User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n      },\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserCart(config2));\r\n}, []);\r\n\r\n  useEffect(() => {\r\n    let sum = 0;\r\n    for (let index = 0; index < cartState?.length; index++) {\r\n      sum = sum + (Number(cartState[index].quantity) * cartState[index].price);\r\n      setTotal(sum);\r\n    }\r\n  }, [cartState]);\r\n\r\n  useEffect(() => {\r\n    let data = [];\r\n    for (let index = 0; index < productState?.length; index++) {\r\n      const element = productState[index];\r\n      data.push({id:index,prod:element?._id,name:element?.title});\r\n    }\r\n    setProductOpt(data);\r\n  }, [productState]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  }\r\n\r\n  const chooseLanguage = (e) => {\r\n    e.preventDefault();\r\n    i18n.changeLanguage(e.target.value);   // i18n.changeLanguage() is used to change the language assigned to lng in i18n.js file.\r\n    setSelectedLanguage(e.target.value);\r\n    localStorage.setItem(\"lang\", e.target.value);\r\n}\r\n\r\n  return (\r\n  <>\r\n    {isDesktop && \r\n    <>\r\n      <header className=\"header-top-strip py-2\">\r\n        <div className=\"container-xxl\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <p className=\"text-white mb-0\">{t(\"Quote\")}</p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-end col-6\">\r\n              <select className=\" text-white mb-0\" style={{borderColor: \"#131921\", background: \"#131921\"}} defaultValue={selectedLanguage} onChange={chooseLanguage}>\r\n                  <option value=\"en\">English</option>\r\n                  <option value=\"tr\">Türkçe</option>\r\n              </select>\r\n              <p className=\"text-white mb-0\">&nbsp; | &nbsp;</p>\r\n              <p className=\"text-end text-white mb-0\">{t(\"Contact\")} <a className=\"text-white\" href=\"tel: +90 533 051 5767\"> +90 533 051 5767</a></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <header className=\"header-upper py-3\">\r\n        <div className=\"container-xxl\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-3\">\r\n              <h2>\r\n                <Link to='/' className=\"text-white\">\r\n                  <img src={labalsatLogo} width={300} height={80} alt='logo' />\r\n                </Link>\r\n              </h2>\r\n            </div>\r\n\r\n            <div className=\"col-5\">\r\n              <div className=\"input-group\">\r\n                <Typeahead\r\n                  id='pagination-example'\r\n                  onPaginate={() => console.log(\"Results paginated\")}\r\n                  onChange={(selected) => {\r\n                    navigate(`/product/${selected[0]?.prod}`);\r\n                    dispatch(getAProduct(selected[0]?.prod));\r\n                  }}\r\n                  options={productOpt}\r\n                  paginate={paginate}\r\n                  labelKey={'name'}\r\n                  minLength={2}\r\n                  placeholder={t(\"Search\")}\r\n                />\r\n                <span className=\"input-group-text p-3\" id=\"basic-addon2\">\r\n                  <BsSearch className='fs-6' />\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-4\">\r\n              <div className=\"header-upper-links d-flex align-items-center justify-content-between\">\r\n                <div>\r\n                  {/*<Link to='/compare-product' className='d-flex align-items-center gap-10 text-white'>\r\n                    <img src={compare} alt='compare' />\r\n                    <p className='mb-0'>Compare <br /> Products</p>\r\n                  </Link> */}\r\n                </div>\r\n                <div>\r\n                  <Link to='/wishlist' className='d-flex align-items-center gap-10 text-white'>\r\n                    <img src={wishlist} alt='wishlist' />\r\n                    <p className='mb-0'>{t(\"About\")} <br /> {t(\"Wishlist\")}</p>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Link to={authState?.user === \"\" ? '/login' : '/my-profile'} className='d-flex align-items-center gap-10 text-white'>\r\n                    <img src={user} alt='user' />\r\n                    {\r\n                      authState?.user === null ? <p className='mb-0'>{t(\"Login\")}</p> : <p className='mb-0'>{t(\"Welcome\")}<br />{authState?.user?.firstname}</p>\r\n                    }\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <header className=\"header-bottom py-3\">\r\n        <div className=\"container-xxl\">\r\n          <div className=\"row\">\r\n            <div className=\"col-9\">\r\n              <div className=\"menu-bottom d-flex align-items-center gap-30\">\r\n                  <div className='d-flex align-items-center gap-30'>\r\n                    <NavLink to=\"/\"><button style={{ color: \"white\", background: \"none\" }} className='border border-0 bg-transpanet text-white text-uppercase ' type='button'>{t(\"Home\")}</button></NavLink>\r\n                    <NavLink to=\"/contact\"><button style={{ color: \"white\", background: \"none\" }} className='border border-0 bg-transpanet text-white text-uppercase ' type='button'>{t(\"ContactHeader\")}</button></NavLink>\r\n                    <NavLink to=\"/offer\"><button style={{ color: \"white\", background: \"none\" }} className='border border-0 bg-transpanet text-white text-uppercase ' type='button'>{t(\"Offer\")}</button></NavLink>\r\n                    <NavLink to=\"/my-profile\"><button style={{ color: \"white\", background: \"none\" }} className='border border-0 bg-transpanet text-white text-uppercase ' type='button'>{t(\"MyOrders\")}</button></NavLink>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-3\" align='right'>\r\n            <button onClick={handleLogout} style={{ color: \"white\", background: \"none\" }} className='border border-0 text-white text-uppercase ' type='button'>{t(\"Logout\")}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>}\r\n    \r\n    {isMobile && <>\r\n      <header className=\"header-top-strip py-2\">\r\n        <div className=\"container-xxl\">\r\n          <div className=\"row\">\r\n            <div className=\"col-5\">\r\n              <p className=\"text-white mb-0\">{t(\"Quote\")}</p>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <select className=\" text-white mb-0\" style={{borderColor: \"#131921\", background: \"#131921\"}} defaultValue={selectedLanguage} onChange={chooseLanguage}>\r\n                  <option value=\"en\">English</option>\r\n                  <option value=\"tr\">Türkçe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"d-flex justify-content-end align-items-start float-end col-5\">\r\n              <p className=\"text-end text-white mb-0\"><a className=\"text-white\" href=\"tel: +90 533 051 5767\"> +90 533 051 5767</a></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <header className=\"header-upper header-top-strip\">\r\n        <div className=\"container-xxl d-flex align-items-center justify-content-center\">\r\n          <div className=\"row d-flex align-items-center justify-content-center\">\r\n              <h2>\r\n                <Link to='/' className=\"text-white\">\r\n                  <img src={labalsatLogo} width={300} height={80} alt='logo' />\r\n                </Link>\r\n              </h2>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <header className=\"header-upper header-top-strip\">\r\n        <div className=\"container-xxl\" style={{maxWidth: \"600px\", paddingRight: \"20px\", paddingLeft: \"20px\"}}>\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"header-upper-links d-flex align-items-center justify-content-between\">\r\n              <div>\r\n                <Link to='/wishlist' className='d-flex align-items-center gap-10 text-white'>\r\n                  <img src={wishlist} alt='wishlist' />\r\n                  <p className='mb-0'>{t(\"Fav\")} <br /> {t(\"Wishlist\")}</p>\r\n                </Link>\r\n              </div>\r\n              <div>\r\n                <Link to={authState?.user === \"\" ? '/login' : '/my-profile'} className='d-flex align-items-center gap-10 text-white'>\r\n                  <img src={user} alt='user' />\r\n                  {\r\n                    authState?.user === null ? <p className='mb-0'>{t(\"Login\")}</p> : <p className='mb-0'>{t(\"Welcome\")}<br />{authState?.user?.firstname}</p>\r\n                  }\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n\r\n      <header className=\"header-upper py-1\">\r\n        <div className=\"container-xxl\" style={{maxWidth: \"600px\"}}>\r\n          <div className=\"row align-items-center\">\r\n              <div className=\"input-group\">\r\n                <Typeahead\r\n                  id='pagination-example'\r\n                  onPaginate={() => console.log(\"Results paginated\")}\r\n                  onChange={(selected) => {\r\n                    navigate(`/product/${selected[0]?.prod}`);\r\n                    dispatch(getAProduct(selected[0]?.prod));\r\n                  }}\r\n                  options={productOpt}\r\n                  paginate={paginate}\r\n                  labelKey={'name'}\r\n                  minLength={2}\r\n                  placeholder={t(\"Search\")}\r\n                />\r\n                <span className=\"input-group-text p-3\" id=\"basic-addon2\">\r\n                  <BsSearch className='fs-6' />\r\n                </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <header className=\"header-bottom py-3\">\r\n        <div className=\"container-xxl\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <div className=\"menu-bottom d-flex align-items-center gap-30\">\r\n                  <div className='d-flex align-items-center gap-30'>\r\n                    <NavLink to=\"/\"><button style={{ color: \"white\", background: \"none\" }} className='border border-0 bg-transpanet text-white text-uppercase ' type='button'>{t(\"Home\")}</button></NavLink>\r\n                    <NavLink to=\"/contact\"><button style={{ color: \"white\", background: \"none\" }} className='border border-0 bg-transpanet text-white text-uppercase ' type='button'>{t(\"ContactHeader\")}</button></NavLink>\r\n                    <NavLink to=\"/offer\"><button style={{ color: \"white\", background: \"none\" }} className='border border-0 bg-transpanet text-white text-uppercase ' type='button'>{t(\"Offer\")}</button></NavLink>\r\n                    <NavLink to=\"/my-profile\"><button style={{ color: \"white\", background: \"none\" }} className='border border-0 bg-transpanet text-white text-uppercase ' type='button'>{t(\"MyOrders\")}</button></NavLink>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-2\" align='right'>\r\n            <button onClick={handleLogout} style={{ color: \"white\", background: \"none\" }} className='border border-0 text-white text-uppercase ' type='button'>{t(\"Logout\")}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>}\r\n  </>);\r\n}\r\n\r\nexport default Header","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/CustomInput.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/ProductCard.js",["416","417"],[],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToWishlist } from '../features/products/productSlice';\r\n\r\nconst ProductCard = (props) => {\r\n  \r\n  const { data } = props;\r\n  const dispatch = useDispatch();\r\n  const addToWish = (id) => {\r\n    dispatch(addToWishlist(id));\r\n  }\r\n//dangerouslySetInnerHTML={{ __html: item?.description}} to dodge <p> tags\r\n  return (\r\n    <>\r\n      {\r\n        data?.map((item, index) => {\r\n          return (\r\n            <div key={index} className='gr-4 mb-3'>\r\n            {/* eslint-disable-next-line */}\r\n              <div className=\"product-card position-relative\">\r\n                  <div className=\"product-image d-flex justify-content-center\">\r\n                      <img src={item?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                      <img src={item?.images[1] ? item.images[1].url : item?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                  </div>\r\n                  <div className=\"product-details\">\r\n                      <h6 className=\"brand\">{item?.brand}</h6>\r\n                      <h5 className='product-title'>{item?.title}</h5>\r\n                      <p className=\"description\" dangerouslySetInnerHTML={{ __html: item?.description}} ></p>\r\n                      <p className=\"price\" style={{ textTransform: 'uppercase'}}> {item?.status}</p>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Container.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/Meta.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/BreadCrumb.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/StoreCard.js",["418","419","420"],[],"import React, {useEffect} from 'react';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport prodcompare from \"../images/prodcompare.svg\";\r\nimport wish from \"../images/wish.svg\";\r\nimport redWish from \"../images/wish-black.svg\";\r\nimport { addToWishlist } from '../features/products/productSlice';\r\nimport { getUserProductWishlist } from '../features/user/userSlice';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst StoreCard = (props) => {\r\n  \r\n  const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n  ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n  : null;\r\n\r\n  const config2 = {\r\n      headers: {\r\n      Authorization: `Bearer ${\r\n          getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n      }`,\r\n      Accept: \"application/json\",\r\n      User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n      },\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n  const { data } = props;\r\n  const dispatch = useDispatch();\r\n  let location = useLocation();\r\n  const wishState = useSelector((state) => state?.user?.wishlist?.wishlist);\r\n  useEffect(() => {\r\n    dispatch(getUserProductWishlist(config2));\r\n  }, [wishState]);\r\n  const addToWish = (id) => {\r\n    dispatch(addToWishlist({id:id, config2:config2}));\r\n  }\r\n//dangerouslySetInnerHTML={{ __html: item?.description}} to dodge <p> tags\r\n  return (\r\n    <>\r\n      {\r\n        data?.map((item, index) => {\r\n          return (\r\n            <div key={index} className='gr-3'>\r\n            {/* eslint-disable-next-line */}\r\n              <div className=\"product-card position-relative\">\r\n                <div className=\"wishlist-icon position-absolute\">\r\n                  <button className='border-0 bg-transparent' onClick={(e) => {addToWish(item?._id)}} ><img src={wishState?.filter(i => i._id === item?._id).length > 0 ? redWish : wish} alt=\"wishlist\" /></button>\r\n                </div>\r\n                  <div className=\"product-image d-flex justify-content-center\">\r\n                      <img src={item?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                      <img src={item?.images[1] ? item.images[1].url : item?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                  </div>\r\n                  <div className=\"product-details mt-3\">\r\n                      <h6 className=\"brand\">{item?.brand}</h6>\r\n                      <h5 className='product-title'>{item?.title}</h5>\r\n                      <p className=\"description\" dangerouslySetInnerHTML={{ __html: item?.description}} ></p>\r\n                      {(item?.price===0 || item?.price===\"\" || item?.price===null) ? <p className=\"price\">{t(\"RequestQuote\")}</p> : <p className=\"price\">{item?.currency ? item?.currency : \"USD\"} {item?.price}</p>}\r\n                  </div>\r\n                  <div className=\"action-bar position-absolute\">\r\n                    <div className=\"d-flex flex-column gap-15\">\r\n                      {/*<button className='border-0 bg-transparent'><img src={prodcompare} alt=\"compare\" /></button>*/}\r\n                      <Link to={'/product/'+ item?._id} className='border-0 button detail-button'>{t(\"DETAILS\")}</Link>\r\n                      {/*<button className='border-0 bg-transparent'><img src={addcart} alt=\"addcart\" /></button>*/}\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoreCard;","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/MobileCard.js",["421","422","423","424","425","426","427"],[],"import React, {useEffect} from 'react';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport prodcompare from \"../images/prodcompare.svg\";\r\nimport wish from \"../images/wish.svg\";\r\nimport redWish from \"../images/wish-black.svg\";\r\nimport watch from \"../images/watch.jpg\";\r\nimport addcart from \"../images/add-cart.svg\";\r\nimport view from \"../images/view.svg\";\r\nimport tv from \"../images/tv.jpg\";\r\nimport { addToWishlist } from '../features/products/productSlice';\r\nimport { getUserProductWishlist } from '../features/user/userSlice';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst MobileCard = (props) => {\r\n  \r\n  const getTokenFromLocalStorage = localStorage.getItem(\"customer\")\r\n  ? JSON.parse(localStorage.getItem(\"customer\")).token\r\n  : null;\r\n\r\n  const config2 = {\r\n      headers: {\r\n      Authorization: `Bearer ${\r\n          getTokenFromLocalStorage !== null ? getTokenFromLocalStorage : \"\"\r\n      }`,\r\n      Accept: \"application/json\",\r\n      User: JSON.parse(localStorage.getItem(\"customer\"))?._id,\r\n      },\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n  const { data } = props;\r\n  const dispatch = useDispatch();\r\n  let location = useLocation();\r\n  const wishState = useSelector((state) => state?.user?.wishlist?.wishlist);\r\n  useEffect(() => {\r\n    dispatch(getUserProductWishlist(config2));\r\n  }, [wishState]);\r\n  const addToWish = (id) => {\r\n    dispatch(addToWishlist({id:id, config2:config2}));\r\n  }\r\n//dangerouslySetInnerHTML={{ __html: item?.description}} to dodge <p> tags\r\n  return (\r\n    <>\r\n      {\r\n        data?.map((item, index) => {\r\n          return (\r\n            <div key={index} className='gr-3'>\r\n            {/* eslint-disable-next-line */}\r\n              <div className=\"product-card position-relative\">\r\n                <div className=\"wishlist-icon position-absolute\">\r\n                  <button className='border-0 bg-transparent' onClick={(e) => {addToWish(item?._id)}} ><img src={wishState?.filter(i => i._id === item?._id).length > 0 ? redWish : wish} alt=\"wishlist\" /></button>\r\n                </div>\r\n                  <div className=\"product-image d-flex justify-content-center\">\r\n                      <img src={item?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                      <img src={item?.images[1] ? item.images[1].url : item?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                  </div>\r\n                  <div className=\"product-details mt-3\">\r\n                      <h6 className=\"brand\">{item?.brand}</h6>\r\n                      <h5 className='product-title'>{item?.title}</h5>\r\n                      <p className=\"description\" dangerouslySetInnerHTML={{ __html: item?.description}} ></p>\r\n                      {(item?.price===0 || item?.price===\"\" || item?.price===null) ? <p className=\"price\">{t(\"RequestQuote\")}</p> : <p className=\"price\">{item?.currency ? item?.currency : \"USD\"} {item?.price}</p>}\r\n                  </div>\r\n                  <div className=\"mt-1 d-flex align-items-center justify-content-center\">\r\n                    <Link to={'/product/'+ item?._id} className='d-flex justify-content-center border-0 button '>{t(\"DETAILS\")}</Link>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default MobileCard;","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/i18n/index.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/utils/Data.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/counter/counterAPI.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/products/productService.js",["428"],[],"import axios from \"axios\";\r\nimport { base_url, config } from \"../../utils/axiosConfig\";\r\n\r\nconst getProducts = async (userData) => {\r\n    const response = await axios.get(`${base_url}product`);\r\n    if (response.data) {\r\n        return response.data;\r\n    }\r\n};\r\n\r\nconst getSingleProduct = async (id) => {\r\n    const response = await axios.get(`${base_url}product/${id}`);\r\n    if (response.data) {\r\n        return response.data;\r\n    }\r\n};\r\n\r\nconst getListedProducts = async (data) => {\r\n    //console.log(\"getlisteda girdi\", data);\r\n    const response = await axios.get(`${base_url}product/listed?${data?.brand?`brand=${data?.brand}&&`:\"\"}${data?.tag?`tags=${data?.tag}&&`:\"\"}${data?.category?`category=${data?.category}&&`:\"\"}${data?.minPrice?`price[gte]=${data?.minPrice}&&`:\"\"}${data?.maxPrice?`price[lte]=${data?.maxPrice}&&`:\"\"}${data?.sort?`sort=${data?.sort}&&`:\"\"}`);\r\n    if (response.data) {\r\n        return response.data;\r\n    }\r\n};\r\n\r\nconst addToWishlist = async (prodID) => {\r\n    //console.log(\"girdi\", prodID.id, prodID.config2);\r\n    const response = await axios.put(`${base_url}product/wishlist`, {id: prodID.id}, prodID.config2);\r\n    //console.log(\"cikti\", response);\r\n    if (response.data) {\r\n        return response.data;\r\n    }\r\n};\r\n\r\nconst deleteFromWishlist = async (prodID) => {\r\n    //console.log(\"girdideleteeee\", prodID.id, prodID.config2);\r\n    const response = await axios.put(`${base_url}product/delete-wishlist`, {id: prodID.id}, prodID.config2);\r\n    if (response.data) {\r\n        return response.data;\r\n    }\r\n};\r\n\r\nconst offerProduct = async (product) => {\r\n    //console.log(\"giriyo\", product, config);\r\n    const response = await axios.post(`${base_url}product/offer`, product.data, product.config2);\r\n    //const response = await axios.post(`${base_url}product/`, product);\r\n    return response.data;\r\n  };\r\n\r\nexport const productService = {\r\n    getProducts,\r\n    getSingleProduct,\r\n    getListedProducts,\r\n    addToWishlist,\r\n    deleteFromWishlist,\r\n    offerProduct,\r\n};","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/CustomInput.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/components/MobileProdCard.js",["429"],[],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToWishlist } from '../features/products/productSlice';\r\n\r\nconst MobileProdCard = (props) => {\r\n  \r\n  const { data } = props;\r\n  const dispatch = useDispatch();\r\n  const addToWish = (id) => {\r\n    dispatch(addToWishlist(id));\r\n  }\r\n//dangerouslySetInnerHTML={{ __html: item?.description}} to dodge <p> tags\r\n  return (\r\n    <>\r\n      {\r\n        data?.map((item, index) => {\r\n          return (\r\n            <div key={index} className='gr-3 mb-3'>\r\n            {/* eslint-disable-next-line */}\r\n              <div className=\"product-card position-relative\">\r\n                  <div className=\"product-image d-flex justify-content-center\">\r\n                      <img src={item?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                      <img src={item?.images[1] ? item.images[1].url : item?.images[0]?.url} className='img-fluid' alt=\"product_img\" />\r\n                  </div>\r\n                  <div className=\"product-details\">\r\n                      <h6 className=\"brand\">{item?.brand}</h6>\r\n                      <h5 className='product-title'>{item?.title}</h5>\r\n                      <p className=\"description\" dangerouslySetInnerHTML={{ __html: item?.description}} ></p>\r\n                      <p className=\"price\" style={{ textTransform: 'uppercase'}}> {item?.status}</p>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default MobileProdCard;","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/contact/contactService.js",["430"],[],"import axios from \"axios\";\r\nimport { base_url, config } from \"../../utils/axiosConfig\";\r\n\r\nconst postQuery = async (contactData) => {\r\n    const response = await axios.post(`${base_url}enquiry`, contactData);\r\n    if (response.data) {\r\n        return response.data;\r\n    }\r\n};\r\n\r\n\r\nexport const contactService = {\r\n    postQuery,\r\n};","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/brand/brandService.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/upload/uploadService.js",["431"],[],"import axios from \"axios\";\nimport { config, base_url } from \"../../utils/axiosConfig\";\n\nconst uploadImg = async (data,  configNew) => {\n  //console.log(\"tfisgoinon service response\", data);\n  const response = await axios.post(`${base_url}upload/`, data, configNew);\n  return response.data;\n};\nconst deleteImg = async (id, configNew) => {\n  //console.log(\"tfisgoinon service\", id);\n  const response = await axios.delete(\n    `${base_url}upload/delete-img/${id}`, configNew);\n  return response.data;\n};\n\nconst uploadService = {\n  uploadImg,\n  deleteImg,\n};\n\nexport default uploadService;\n","/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/needed/pcategory/pcategoryService.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/user/userService.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/contract/contractSlice.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/utils/axiosConfig.js",[],[],"/Users/eymenozdemir/Desktop/HARMONI/labalsat/ecommerce-app/src/features/contract/contractService.js",["432"],[],"import axios from \"axios\";\r\nimport { base_url, config } from \"../../utils/axiosConfig\";\r\n\r\nconst postQuery = async (contractData) => {\r\n    const response = await axios.post(`${base_url}contract`, contractData);\r\n    if (response.data) {\r\n        return response.data;\r\n    }\r\n};\r\n\r\n\r\nexport const contractService = {\r\n    postQuery,\r\n};",{"ruleId":"433","severity":1,"message":"434","line":6,"column":8,"nodeType":"435","messageId":"436","endLine":6,"endColumn":19},{"ruleId":"433","severity":1,"message":"437","line":32,"column":8,"nodeType":"435","messageId":"436","endLine":32,"endColumn":24},{"ruleId":"433","severity":1,"message":"438","line":1,"column":28,"nodeType":"435","messageId":"436","endLine":1,"endColumn":36},{"ruleId":"439","severity":1,"message":"440","line":44,"column":8,"nodeType":"441","endLine":44,"endColumn":19,"suggestions":"442"},{"ruleId":"433","severity":1,"message":"443","line":164,"column":11,"nodeType":"435","messageId":"436","endLine":164,"endColumn":16},{"ruleId":"433","severity":1,"message":"444","line":166,"column":10,"nodeType":"435","messageId":"436","endLine":166,"endColumn":20},{"ruleId":"433","severity":1,"message":"445","line":167,"column":10,"nodeType":"435","messageId":"436","endLine":167,"endColumn":14},{"ruleId":"433","severity":1,"message":"446","line":168,"column":10,"nodeType":"435","messageId":"436","endLine":168,"endColumn":21},{"ruleId":"433","severity":1,"message":"447","line":168,"column":23,"nodeType":"435","messageId":"436","endLine":168,"endColumn":37},{"ruleId":"433","severity":1,"message":"448","line":169,"column":15,"nodeType":"435","messageId":"436","endLine":169,"endColumn":21},{"ruleId":"433","severity":1,"message":"449","line":171,"column":20,"nodeType":"435","messageId":"436","endLine":171,"endColumn":31},{"ruleId":"433","severity":1,"message":"450","line":172,"column":17,"nodeType":"435","messageId":"436","endLine":172,"endColumn":25},{"ruleId":"433","severity":1,"message":"451","line":173,"column":20,"nodeType":"435","messageId":"436","endLine":173,"endColumn":31},{"ruleId":"433","severity":1,"message":"452","line":174,"column":20,"nodeType":"435","messageId":"436","endLine":174,"endColumn":31},{"ruleId":"433","severity":1,"message":"453","line":175,"column":16,"nodeType":"435","messageId":"436","endLine":175,"endColumn":23},{"ruleId":"439","severity":1,"message":"454","line":208,"column":6,"nodeType":"441","endLine":208,"endColumn":20,"suggestions":"455"},{"ruleId":"439","severity":1,"message":"456","line":215,"column":6,"nodeType":"441","endLine":215,"endColumn":16,"suggestions":"457"},{"ruleId":"439","severity":1,"message":"458","line":219,"column":6,"nodeType":"441","endLine":219,"endColumn":44,"suggestions":"459"},{"ruleId":"433","severity":1,"message":"445","line":14,"column":11,"nodeType":"435","messageId":"436","endLine":14,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":15,"column":16,"nodeType":"435","messageId":"436","endLine":15,"endColumn":22},{"ruleId":"439","severity":1,"message":"458","line":39,"column":6,"nodeType":"441","endLine":39,"endColumn":54,"suggestions":"460"},{"ruleId":"439","severity":1,"message":"461","line":35,"column":8,"nodeType":"441","endLine":35,"endColumn":10,"suggestions":"462"},{"ruleId":"433","severity":1,"message":"438","line":1,"column":28,"nodeType":"435","messageId":"436","endLine":1,"endColumn":36},{"ruleId":"433","severity":1,"message":"463","line":8,"column":10,"nodeType":"435","messageId":"436","endLine":8,"endColumn":14},{"ruleId":"433","severity":1,"message":"464","line":10,"column":24,"nodeType":"435","messageId":"436","endLine":10,"endColumn":33},{"ruleId":"433","severity":1,"message":"465","line":7,"column":23,"nodeType":"435","messageId":"436","endLine":7,"endColumn":34},{"ruleId":"433","severity":1,"message":"466","line":17,"column":11,"nodeType":"435","messageId":"436","endLine":17,"endColumn":19},{"ruleId":"433","severity":1,"message":"467","line":4,"column":16,"nodeType":"435","messageId":"436","endLine":4,"endColumn":27},{"ruleId":"433","severity":1,"message":"463","line":6,"column":10,"nodeType":"435","messageId":"436","endLine":6,"endColumn":14},{"ruleId":"433","severity":1,"message":"465","line":7,"column":23,"nodeType":"435","messageId":"436","endLine":7,"endColumn":34},{"ruleId":"433","severity":1,"message":"468","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":16},{"ruleId":"433","severity":1,"message":"469","line":137,"column":10,"nodeType":"435","messageId":"436","endLine":137,"endColumn":14},{"ruleId":"433","severity":1,"message":"470","line":138,"column":10,"nodeType":"435","messageId":"436","endLine":138,"endColumn":16},{"ruleId":"433","severity":1,"message":"448","line":139,"column":16,"nodeType":"435","messageId":"436","endLine":139,"endColumn":22},{"ruleId":"433","severity":1,"message":"449","line":140,"column":21,"nodeType":"435","messageId":"436","endLine":140,"endColumn":32},{"ruleId":"433","severity":1,"message":"450","line":141,"column":18,"nodeType":"435","messageId":"436","endLine":141,"endColumn":26},{"ruleId":"433","severity":1,"message":"451","line":142,"column":21,"nodeType":"435","messageId":"436","endLine":142,"endColumn":32},{"ruleId":"433","severity":1,"message":"452","line":143,"column":21,"nodeType":"435","messageId":"436","endLine":143,"endColumn":32},{"ruleId":"433","severity":1,"message":"453","line":144,"column":17,"nodeType":"435","messageId":"436","endLine":144,"endColumn":24},{"ruleId":"433","severity":1,"message":"471","line":145,"column":9,"nodeType":"435","messageId":"436","endLine":145,"endColumn":18},{"ruleId":"433","severity":1,"message":"472","line":150,"column":9,"nodeType":"435","messageId":"436","endLine":150,"endColumn":18},{"ruleId":"439","severity":1,"message":"458","line":157,"column":6,"nodeType":"441","endLine":157,"endColumn":44,"suggestions":"473"},{"ruleId":"433","severity":1,"message":"463","line":9,"column":10,"nodeType":"435","messageId":"436","endLine":9,"endColumn":14},{"ruleId":"433","severity":1,"message":"474","line":12,"column":10,"nodeType":"435","messageId":"436","endLine":12,"endColumn":15},{"ruleId":"439","severity":1,"message":"475","line":53,"column":8,"nodeType":"441","endLine":53,"endColumn":10,"suggestions":"476"},{"ruleId":"439","severity":1,"message":"477","line":61,"column":8,"nodeType":"441","endLine":61,"endColumn":10,"suggestions":"478"},{"ruleId":"479","severity":1,"message":"480","line":87,"column":29,"nodeType":"481","messageId":"482","endLine":87,"endColumn":31},{"ruleId":"439","severity":1,"message":"483","line":92,"column":8,"nodeType":"441","endLine":92,"endColumn":22,"suggestions":"484"},{"ruleId":"433","severity":1,"message":"485","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":13},{"ruleId":"433","severity":1,"message":"486","line":6,"column":8,"nodeType":"435","messageId":"436","endLine":6,"endColumn":19},{"ruleId":"433","severity":1,"message":"487","line":38,"column":12,"nodeType":"435","messageId":"436","endLine":38,"endColumn":24},{"ruleId":"433","severity":1,"message":"488","line":39,"column":12,"nodeType":"435","messageId":"436","endLine":39,"endColumn":28},{"ruleId":"433","severity":1,"message":"489","line":39,"column":30,"nodeType":"435","messageId":"436","endLine":39,"endColumn":49},{"ruleId":"433","severity":1,"message":"466","line":40,"column":11,"nodeType":"435","messageId":"436","endLine":40,"endColumn":19},{"ruleId":"439","severity":1,"message":"490","line":96,"column":8,"nodeType":"441","endLine":96,"endColumn":10,"suggestions":"491"},{"ruleId":"439","severity":1,"message":"490","line":34,"column":6,"nodeType":"441","endLine":34,"endColumn":8,"suggestions":"492"},{"ruleId":"439","severity":1,"message":"490","line":42,"column":6,"nodeType":"441","endLine":42,"endColumn":27,"suggestions":"493"},{"ruleId":"439","severity":1,"message":"494","line":13,"column":8,"nodeType":"441","endLine":13,"endColumn":10,"suggestions":"495"},{"ruleId":"433","severity":1,"message":"466","line":54,"column":11,"nodeType":"435","messageId":"436","endLine":54,"endColumn":19},{"ruleId":"433","severity":1,"message":"496","line":56,"column":12,"nodeType":"435","messageId":"436","endLine":56,"endColumn":18},{"ruleId":"433","severity":1,"message":"497","line":56,"column":20,"nodeType":"435","messageId":"436","endLine":56,"endColumn":29},{"ruleId":"439","severity":1,"message":"494","line":60,"column":8,"nodeType":"441","endLine":60,"endColumn":10,"suggestions":"498"},{"ruleId":"439","severity":1,"message":"499","line":75,"column":8,"nodeType":"441","endLine":75,"endColumn":39,"suggestions":"500"},{"ruleId":"439","severity":1,"message":"501","line":91,"column":8,"nodeType":"441","endLine":91,"endColumn":18,"suggestions":"502"},{"ruleId":"433","severity":1,"message":"464","line":8,"column":24,"nodeType":"435","messageId":"436","endLine":8,"endColumn":33},{"ruleId":"433","severity":1,"message":"503","line":9,"column":10,"nodeType":"435","messageId":"436","endLine":9,"endColumn":21},{"ruleId":"439","severity":1,"message":"490","line":78,"column":8,"nodeType":"441","endLine":78,"endColumn":10,"suggestions":"504"},{"ruleId":"479","severity":1,"message":"480","line":96,"column":42,"nodeType":"481","messageId":"482","endLine":96,"endColumn":44},{"ruleId":"433","severity":1,"message":"474","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":15},{"ruleId":"433","severity":1,"message":"505","line":3,"column":35,"nodeType":"435","messageId":"436","endLine":3,"endColumn":44},{"ruleId":"433","severity":1,"message":"506","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":15},{"ruleId":"433","severity":1,"message":"507","line":8,"column":8,"nodeType":"435","messageId":"436","endLine":8,"endColumn":12},{"ruleId":"433","severity":1,"message":"508","line":9,"column":8,"nodeType":"435","messageId":"436","endLine":9,"endColumn":12},{"ruleId":"433","severity":1,"message":"509","line":14,"column":23,"nodeType":"435","messageId":"436","endLine":14,"endColumn":45},{"ruleId":"433","severity":1,"message":"510","line":42,"column":20,"nodeType":"435","messageId":"436","endLine":42,"endColumn":31},{"ruleId":"433","severity":1,"message":"511","line":44,"column":10,"nodeType":"435","messageId":"436","endLine":44,"endColumn":15},{"ruleId":"439","severity":1,"message":"490","line":64,"column":4,"nodeType":"441","endLine":64,"endColumn":6,"suggestions":"512"},{"ruleId":"433","severity":1,"message":"465","line":2,"column":23,"nodeType":"435","messageId":"436","endLine":2,"endColumn":34},{"ruleId":"433","severity":1,"message":"513","line":9,"column":9,"nodeType":"435","messageId":"436","endLine":9,"endColumn":18},{"ruleId":"433","severity":1,"message":"514","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":19},{"ruleId":"433","severity":1,"message":"515","line":30,"column":7,"nodeType":"435","messageId":"436","endLine":30,"endColumn":15},{"ruleId":"439","severity":1,"message":"490","line":34,"column":6,"nodeType":"441","endLine":34,"endColumn":17,"suggestions":"516"},{"ruleId":"433","severity":1,"message":"514","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":19},{"ruleId":"433","severity":1,"message":"485","line":7,"column":8,"nodeType":"435","messageId":"436","endLine":7,"endColumn":13},{"ruleId":"433","severity":1,"message":"517","line":8,"column":8,"nodeType":"435","messageId":"436","endLine":8,"endColumn":15},{"ruleId":"433","severity":1,"message":"518","line":9,"column":8,"nodeType":"435","messageId":"436","endLine":9,"endColumn":12},{"ruleId":"433","severity":1,"message":"519","line":10,"column":8,"nodeType":"435","messageId":"436","endLine":10,"endColumn":10},{"ruleId":"433","severity":1,"message":"515","line":34,"column":7,"nodeType":"435","messageId":"436","endLine":34,"endColumn":15},{"ruleId":"439","severity":1,"message":"490","line":38,"column":6,"nodeType":"441","endLine":38,"endColumn":17,"suggestions":"520"},{"ruleId":"433","severity":1,"message":"521","line":2,"column":20,"nodeType":"435","messageId":"436","endLine":2,"endColumn":26},{"ruleId":"433","severity":1,"message":"513","line":9,"column":9,"nodeType":"435","messageId":"436","endLine":9,"endColumn":18},{"ruleId":"433","severity":1,"message":"521","line":2,"column":20,"nodeType":"435","messageId":"436","endLine":2,"endColumn":26},{"ruleId":"433","severity":1,"message":"521","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":16},{"ruleId":"433","severity":1,"message":"521","line":2,"column":20,"nodeType":"435","messageId":"436","endLine":2,"endColumn":26},"no-unused-vars","'ScrollToTop' is defined but never used.","Identifier","unusedVar","'LanguageSelector' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["522"],"'state' is assigned a value but never used.","'categories' is assigned a value but never used.","'tags' is assigned a value but never used.","'loadCounter' is assigned a value but never used.","'setLoadCounter' is assigned a value but never used.","'setTag' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'setBrand' is assigned a value but never used.","'setMinPrice' is assigned a value but never used.","'setMaxPrice' is assigned a value but never used.","'setSort' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'filterFunc'. Either include them or remove the dependency array.",["523"],"React Hook useEffect has a missing dependency: 'pageFunc'. Either include it or remove the dependency array.",["524"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["525"],["526"],"React Hook useEffect has a missing dependency: 'getWishlistFromDb'. Either include it or remove the dependency array.",["527"],"'Link' is defined but never used.","'loginUser' is defined but never used.","'useSelector' is defined but never used.","'navigate' is assigned a value but never used.","'useNavigate' is defined but never used.","'BiEdit' is defined but never used.","'open' is assigned a value but never used.","'prodId' is assigned a value but never used.","'showModal' is assigned a value but never used.","'hideModal' is assigned a value but never used.",["528"],"'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'config2', 'dispatch', and 'getProductId'. Either include them or remove the dependency array.",["529"],"React Hook useEffect has missing dependencies: 'cartState' and 'getProductId'. Either include them or remove the dependency array.",["530"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'productsState'. Either include it or remove the dependency array.",["531"],"'watch' is defined but never used.","'ProductCard' is defined but never used.","'shippingInfo' is assigned a value but never used.","'cartProductState' is assigned a value but never used.","'setCartProductState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config2' and 'dispatch'. Either include them or remove the dependency array.",["532"],["533"],["534"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["535"],"'images' is assigned a value but never used.","'setImages' is assigned a value but never used.",["536"],"React Hook useEffect has a missing dependency: 'createdProduct'. Either include it or remove the dependency array.",["537"],"React Hook useEffect has a missing dependency: 'formik.values'. Either include it or remove the dependency array.",["538"],"'getAProduct' is defined but never used.",["539"],"'BsYoutube' is defined but never used.","'compare' is defined but never used.","'cart' is defined but never used.","'menu' is defined but never used.","'getUserProductWishlist' is defined but never used.","'setPaginate' is assigned a value but never used.","'total' is assigned a value but never used.",["540"],"'addToWish' is assigned a value but never used.","'prodcompare' is defined but never used.","'location' is assigned a value but never used.",["541"],"'addcart' is defined but never used.","'view' is defined but never used.","'tv' is defined but never used.",["542"],"'config' is defined but never used.",{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"549","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"562","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"567","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"562","fix":"574"},{"desc":"562","fix":"575"},{"desc":"576","fix":"577"},{"desc":"576","fix":"578"},"Update the dependencies array to be: [authState, navigate]",{"range":"579","text":"580"},"Update the dependencies array to be: [dispatch, filterFunc, productState]",{"range":"581","text":"582"},"Update the dependencies array to be: [filtered, pageFunc]",{"range":"583","text":"584"},"Update the dependencies array to be: [sort, tag, brand, minPrice, maxPrice, getProducts]",{"range":"585","text":"586"},"Update the dependencies array to be: [sort, tag, brand, category, minPrice, maxPrice, getProducts]",{"range":"587","text":"588"},"Update the dependencies array to be: [getWishlistFromDb]",{"range":"589","text":"590"},{"range":"591","text":"586"},"Update the dependencies array to be: [config2, dispatch, getProductId]",{"range":"592","text":"593"},"Update the dependencies array to be: [cartState, getProductId]",{"range":"594","text":"595"},"Update the dependencies array to be: [productState, productsState]",{"range":"596","text":"597"},"Update the dependencies array to be: [config2, dispatch]",{"range":"598","text":"599"},{"range":"600","text":"599"},"Update the dependencies array to be: [config2, dispatch, productUpdateDetail]",{"range":"601","text":"602"},"Update the dependencies array to be: [dispatch]",{"range":"603","text":"604"},{"range":"605","text":"604"},"Update the dependencies array to be: [isSuccess, isError, isLoading, createdProduct]",{"range":"606","text":"607"},"Update the dependencies array to be: [formik.values, imgState]",{"range":"608","text":"609"},{"range":"610","text":"599"},{"range":"611","text":"599"},"Update the dependencies array to be: [config2, dispatch, wishState]",{"range":"612","text":"613"},{"range":"614","text":"613"},[1458,1469],"[authState, navigate]",[7993,8007],"[dispatch, filterFunc, productState]",[8260,8270],"[filtered, pageFunc]",[8322,8360],"[sort, tag, brand, minPrice, maxPrice, getProducts]",[1413,1461],"[sort, tag, brand, category, minPrice, maxPrice, getProducts]",[1284,1286],"[getWishlistFromDb]",[3554,3592],[2326,2328],"[config2, dispatch, getProductId]",[2597,2599],"[cartState, getProductId]",[3788,3802],"[productState, productsState]",[4215,4217],"[config2, dispatch]",[1218,1220],[1497,1518],"[config2, dispatch, productUpdateDetail]",[471,473],"[dispatch]",[2277,2279],[2854,2885],"[isSuccess, isError, isLoading, createdProduct]",[3201,3211],"[formik.values, imgState]",[3019,3021],[2658,2660],[1216,1227],"[config2, dispatch, wishState]",[1382,1393]]